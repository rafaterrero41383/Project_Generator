{
  "openapi": "3.0.0",
  "info": {
    "title": "Rec Reference Data",
    "contact": {},
    "version": "1.9.0"
  },
  "servers": [
    {
      "url": "https://${HOST_NAME}/experience/referenceData",
      "variables": {
        "HOST_NAME": {
          "default": "DefaultParameterValue"
        }
      }
    }
  ],
  "paths": {
    "/v1/ocrDocument/retrieve": {
      "get": {
        "tags": ["v1"],
        "summary": "V1OcrDocumentRetrieve_GET",
        "description": "Servicio de experiencia que se encarga de retornar datos sobre la lectura del usuario de la declaración de identificación y dirección envuelta en el objeto ocrData.",
        "operationId": "V1OcrDocumentRetrieve_GET",
        "parameters": [
          {
            "name": "consumerRequestId",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Example"
            }
          },
          {
            "name": "token",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Example"
            }
          },
          {
            "name": "identity-session-token",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Example"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/retrieveOcrDocumentRs"
                    },
                    {
                      "example": {
                        "documentation": {
                          "documentContent": {
                            "ocrData": {
                              "identificationDevice": {
                                "dateOfBirth": "f361a7cd89602fcdc48b91c174b07830",
                                "personName": {
                                  "fullName": "1276c190f7197fd82d7f0ad19c1c93d2",
                                  "firstName": "1276c190f7197fd82d7f0ad19c1c93d2",
                                  "familyName": "15276e7fd43ab63d6b0a6a3bc03f313f",
                                  "secondLastName": "07232a5d792f96d44ac593e43d6592c3",
                                  "fullNameMrz": "4644f71c4d3e8615ebfd1bcb7950fe2b"
                                },
                                "curp": "0394b6bae55e26661d",
                                "ocr": "1ff61feeb7992",
                                "cic": "5e6f04f6a",
                                "voterKey": "ea7bac7976e5b1bb49",
                                "emissionNumber": "751d31dd6b56b26b29dac2c0e1839e34",
                                "expireAt": "1988064000000",
                                "expirationDate": "5352696a9ca3397beb79f116f3a33991",
                                "machineReadZone": [
                                  {
                                    "value": "299b25600828899e55cc48feb9845ab7"
                                  },
                                  {
                                    "value": "299b25600828899e55cc48feb9845ab7"
                                  },
                                  {
                                    "value": "299b25600828899e55cc48feb9845ab7"
                                  }
                                ],
                                "gender": "69691c7bdcc3ce6d5d8a1361f22d04ac",
                                "registrationDate": "b8b4b727d6f5d1b61fff7be687f7970f",
                                "dateOfBirthCheckDigit": "8f14e45fceea167a5a36dedd4bea2543",
                                "documentNumberCheckDigit": "c9f0f895fb98ab9159f51fd0297e236d",
                                "expirationDateCheckDigit": "c81e728d9d4c2f636f067f89cc14862c",
                                "issueDate": 1644076800000
                              },
                              "location": [
                                {
                                  "isFullAddress": true,
                                  "locationDescription": "837605ddb5847fe471dd3dd01fef9443",
                                  "street": {
                                    "streetName": "dbdf93dc6ae43db67c56ab8a226daa28"
                                  },
                                  "neighborhood": "4e1dccc679b3bbda511dd1e4f2864fd0",
                                  "postalAddress": "a68ff546db3e1dfbbef72041279c5574",
                                  "city": {
                                    "name": "0b4596f8efe110dc55bbe564213dfb33"
                                  },
                                  "state": {
                                    "name": "4a35783a172aad8ad502ef6a122be2fe"
                                  },
                                  "isInvalidAddress": "68934a3e9455fa72420237eb05902327",
                                  "emissionDate": "1680998400000",
                                  "externalHouseNumber": "0b4596f8efe110dc55bbe564213dfb33"
                                },
                                {
                                  "neighborhood": "4e1dccc679b3bbda511dd1e4f2864fd0",
                                  "postalAddress": "a68ff546db3e1dfbbef72041279c5574"
                                }
                              ],
                              "confidence": {
                                "addressOcrConfidence": 0.67082536,
                                "cityOcrConfidence": 0.67082536
                              }
                            }
                          },
                          "partyReference": {
                            "nationality": "4e1dccc679b3bbda511dd1e4f2864fd0",
                            "nationalityMrz": "4e1dccc679b3bbda511dd1e4f2864fd0",
                            "personName": {
                              "fullName": "4e1dccc679b3bbda511dd1e4f2864fd0",
                              "fullNameMrz": "4e1dccc679b3bbda511dd1e4f2864fd0"
                            },
                            "identifications": [
                              {
                                "personIdentificationType": "Numero Identificacion",
                                "identifier": {
                                  "identifierValue": "c2a63a9f1fce966ecabae6e7ee4204a3"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "documentation": {
                    "documentContent": {
                      "ocrData": {
                        "identificationDevice": {
                          "dateOfBirth": "f361a7cd89602fcdc48b91c174b07830",
                          "personName": {
                            "fullName": "1276c190f7197fd82d7f0ad19c1c93d2",
                            "firstName": "1276c190f7197fd82d7f0ad19c1c93d2",
                            "familyName": "15276e7fd43ab63d6b0a6a3bc03f313f",
                            "secondLastName": "07232a5d792f96d44ac593e43d6592c3",
                            "fullNameMrz": "4644f71c4d3e8615ebfd1bcb7950fe2b"
                          },
                          "curp": "0394b6bae55e26661d",
                          "ocr": "1ff61feeb7992",
                          "cic": "5e6f04f6a",
                          "voterKey": "ea7bac7976e5b1bb49",
                          "emissionNumber": "751d31dd6b56b26b29dac2c0e1839e34",
                          "expireAt": "1988064000000",
                          "expirationDate": "5352696a9ca3397beb79f116f3a33991",
                          "machineReadZone": [
                            {
                              "value": "299b25600828899e55cc48feb9845ab7"
                            },
                            {
                              "value": "299b25600828899e55cc48feb9845ab7"
                            },
                            {
                              "value": "299b25600828899e55cc48feb9845ab7"
                            }
                          ],
                          "gender": "69691c7bdcc3ce6d5d8a1361f22d04ac",
                          "registrationDate": "b8b4b727d6f5d1b61fff7be687f7970f",
                          "dateOfBirthCheckDigit": "8f14e45fceea167a5a36dedd4bea2543",
                          "documentNumberCheckDigit": "c9f0f895fb98ab9159f51fd0297e236d",
                          "expirationDateCheckDigit": "c81e728d9d4c2f636f067f89cc14862c",
                          "issueDate": 1644076800000
                        },
                        "location": [
                          {
                            "isFullAddress": true,
                            "locationDescription": "837605ddb5847fe471dd3dd01fef9443",
                            "street": {
                              "streetName": "dbdf93dc6ae43db67c56ab8a226daa28"
                            },
                            "neighborhood": "4e1dccc679b3bbda511dd1e4f2864fd0",
                            "postalAddress": "a68ff546db3e1dfbbef72041279c5574",
                            "city": {
                              "name": "0b4596f8efe110dc55bbe564213dfb33"
                            },
                            "state": {
                              "name": "4a35783a172aad8ad502ef6a122be2fe"
                            },
                            "isInvalidAddress": "68934a3e9455fa72420237eb05902327",
                            "emissionDate": "1680998400000",
                            "externalHouseNumber": "0b4596f8efe110dc55bbe564213dfb33"
                          },
                          {
                            "neighborhood": "4e1dccc679b3bbda511dd1e4f2864fd0",
                            "postalAddress": "a68ff546db3e1dfbbef72041279c5574"
                          }
                        ],
                        "confidence": {
                          "addressOcrConfidence": 0.67082536,
                          "cityOcrConfidence": 0.67082536
                        }
                      }
                    },
                    "partyReference": {
                      "nationality": "4e1dccc679b3bbda511dd1e4f2864fd0",
                      "nationalityMrz": "4e1dccc679b3bbda511dd1e4f2864fd0",
                      "personName": {
                        "fullName": "4e1dccc679b3bbda511dd1e4f2864fd0",
                        "fullNameMrz": "4e1dccc679b3bbda511dd1e4f2864fd0"
                      },
                      "identifications": [
                        {
                          "personIdentificationType": "Numero Identificacion",
                          "identifier": {
                            "identifierValue": "c2a63a9f1fce966ecabae6e7ee4204a3"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "400",
                        "status": "FAILED",
                        "message": "Bad Request"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "400",
                  "status": "FAILED",
                  "message": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "401",
                        "status": "FAILED",
                        "message": "Unauthorized"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "401",
                  "status": "FAILED",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "403",
                        "status": "FAILED",
                        "message": "Forbidden"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "403",
                  "status": "FAILED",
                  "message": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "404",
                        "status": "FAILED",
                        "message": "Not Found"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "404",
                  "status": "FAILED",
                  "message": "Not Found"
                }
              }
            }
          },
          "408": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "408",
                        "status": "FAILED",
                        "message": "Time Out"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "408",
                  "status": "FAILED",
                  "message": "Time Out"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "500",
                        "status": "FAILED",
                        "message": "Internal Server Error"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "500",
                  "status": "FAILED",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },

    "/v1/onBoardingPartySuitability/evaluate": {
      "post": {
        "tags": ["v1"],
        "summary": "V1OnBoardingPartySuitabilityEvaluate_POST",
        "description": "Servicio de negocio que se encarga de consultar al cliente en las listas negras respectivas",
        "operationId": "V1OnBoardingPartySuitabilityEvaluate_POST",
        "parameters": [
          {
            "name": "consumerRequestId",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Example"
            }
          },
          {
            "name": "token",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Example"
            }
          },
          {
            "name": "identity-session-token",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Example"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/evaluateOnBoardingPartySuitabilityRq"
                  },
                  {
                    "example": {
                      "sessionDialogueIdentification": "68bef9572cc52d1758feb1f5"
                    }
                  }
                ]
              },
              "example": {
                "sessionDialogueIdentification": "68bef9572cc52d1758feb1f5"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/evaluateOnBoardingPartySuitabilityRs"
                    },
                    {
                      "example": {
                        "qualification": {
                          "qualificationTaskResult": [
                            {
                              "result": true,
                              "qualificationType": "bancoppel"
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "qualification": {
                    "qualificationTaskResult": [
                      {
                        "result": true,
                        "qualificationType": "bancoppel"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "400",
                        "status": "FAILED",
                        "message": "Bad Request"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "400",
                  "status": "FAILED",
                  "message": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "401",
                        "status": "FAILED",
                        "message": "Unauthorized"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "401",
                  "status": "FAILED",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "403",
                        "status": "FAILED",
                        "message": "Forbidden"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "403",
                  "status": "FAILED",
                  "message": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "404",
                        "status": "FAILED",
                        "message": "Not Found"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "404",
                  "status": "FAILED",
                  "message": "Not Found"
                }
              }
            }
          },
          "408": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "408",
                        "status": "FAILED",
                        "message": "Time Out"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "408",
                  "status": "FAILED",
                  "message": "Time Out"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "500",
                        "status": "FAILED",
                        "message": "Internal Server Error"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "500",
                  "status": "FAILED",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },

    "/v1/reviewCustomerAccount/evaluate": {
      "post": {
        "tags": ["v1"],
        "summary": "V1ReviewCustomerAccountEvaluate_POST",
        "description": "Servicio encargado de evaluar datos específicos del cliente.",
        "operationId": "V1ReviewCustomerAccountEvaluate_POST",
        "parameters": [
          {
            "name": "consumerRequestId",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Example"
            }
          },
          {
            "name": "token",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Example"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/evaluateCustomerAccountRq"
                  },
                  {
                    "example": {
                      "partyReference": {
                        "referenceId": "A93B64AE1FB376A15EC21132E65B478F"
                      }
                    }
                  }
                ]
              },
              "example": {
                "partyReference": {
                  "referenceId": "A93B64AE1FB376A15EC21132E65B478F"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/evaluateCustomerAccountRs"
                    },
                    {
                      "example": {
                        "partyRelationshipProcedure": {
                          "partyLifeAccountResult": "A93B64AE1FB376A15EC21132E65B478F",
                          "partyLifeApplicationStatus": "accepted",
                          "customerProspectiveType": "2",
                          "partyReference": {
                            "dateOfBirth": "A93B64AE1FB376A15EC21132E65B478F"
                          }
                        },
                        "customerCreditRatingState": {
                          "customerCreditRatingStatusType": "Buena",
                          "creditRatingBlackListType": "Lista Negra Nacional"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "partyRelationshipProcedure": {
                    "partyLifeAccountResult": "A93B64AE1FB376A15EC21132E65B478F",
                    "partyLifeApplicationStatus": "accepted",
                    "customerProspectiveType": "2",
                    "partyReference": {
                      "dateOfBirth": "A93B64AE1FB376A15EC21132E65B478F"
                    }
                  },
                  "customerCreditRatingState": {
                    "customerCreditRatingStatusType": "Buena",
                    "creditRatingBlackListType": "Lista Negra Nacional"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "400",
                        "status": "FAILED",
                        "message": "Bad Request"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "400",
                  "status": "FAILED",
                  "message": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "401",
                        "status": "FAILED",
                        "message": "Unauthorized"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "401",
                  "status": "FAILED",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "403",
                        "status": "FAILED",
                        "message": "Forbidden"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "403",
                  "status": "FAILED",
                  "message": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "404",
                        "status": "FAILED",
                        "message": "Not Found"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "404",
                  "status": "FAILED",
                  "message": "Not Found"
                }
              }
            }
          },
          "408": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "408",
                        "status": "FAILED",
                        "message": "Time Out"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "408",
                  "status": "FAILED",
                  "message": "Time Out"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "500",
                        "status": "FAILED",
                        "message": "Internal Server Error"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "500",
                  "status": "FAILED",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },

    "/v1/generateParty/register": {
      "post": {
        "tags": ["v1"],
        "summary": "V1GeneratePartyRegister_POST",
        "description": "Operación encargada de realizar el registro de un cliente físico.",
        "operationId": "V1GeneratePartyRegister_POST",
        "parameters": [
          {
            "name": "consumerRequestId",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Example"
            }
          },
          {
            "name": "token",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Example"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/registerPartyReferenceDataDirectoryRq"
                  },
                  {
                    "example": {
                      "partyReferenceDataDirectoryEntry": {
                        "partyReference": {
                          "location": [
                            {
                              "country": {
                                "code": "41EF894026A8CD4",
                                "name": "description"
                              }
                            }
                          ],
                          "referenceId": "A93B64AE1FB376A15EC21132E65B478F",
                          "contactPoint": [
                            {
                              "contactPointValue": "464E07AFC9E46359FB480839150595C5",
                              "contactPointType": "Electronic Address"
                            }
                          ],
                          "referenceIdCoppel": "41EF894026A8CD4DA247105A6036DB70",
                          "personName": {
                            "familyName": "92EAF3719159C372F3D50337E0A14F57",
                            "secondLastName": "08B3D5FA8337D8C29F10AB5909F20C56",
                            "firstName": "464E07AFC9E46359FB480839150595C5",
                            "secondName": "41EF894026A8CD4DA247105A6036DB70",
                            "marriedName": "064A1B28141F5A118925852BBB124BAF"
                          },
                          "dateOfBirth": "A93B64AE1FB376A15EC21132E65B478F",
                          "gender": "A93B64AE1FB376A15EC21132E65B478F",
                          "profession": "897",
                          "matrimonialRegime": "D4DB7298729FCA8E66F1E69A28ECE2F0",
                          "maritalStatus": "BA5B324317B90CE3CE579BB98416E3EA",
                          "nationality": "C8CF053EF5CE7AD676E6E8C0925FE368",
                          "birthPlace": {
                            "location": [
                              {
                                "locationDescription": "69691C7BDCC3CE6D5D8A1361F22D04AC",
                                "country": {
                                  "code": "064A1B28141F5A1",
                                  "name": "08B3D5FA8337D8C"
                                },
                                "longitude": "92EAF3719159C372F3D50337E0A14F57",
                                "latitude": "DBDF93DC6AE43DB67C56AB8A226DAA28"
                              }
                            ]
                          },
                          "identifications": [
                            {
                              "identifier": {
                                "identifierValue": "BA5B324317B90CE3CE579BB98416E3EA"
                              },
                              "personIdentificationType": "Registro Federal Contribuyentes"
                            },
                            {
                              "identifier": {
                                "identifierValue": "BA5B324317B90CE3CE579BB98416E3EA"
                              },
                              "personIdentificationType": "Documentos Migratorios De No Emigrantes"
                            },
                            {
                              "identifier": {
                                "identifierValue": "BA5B324317B90CE3CE579BB98416E3EA"
                              },
                              "personIdentificationType": "ClaveUnicaRegistroPoblacion"
                            },
                            {
                              "identifier": {
                                "identifierValue": "BA5B324317B90CE3CE579BB98416E3EA"
                              },
                              "personIdentificationType": "Codigo Identificacion"
                            },
                            {
                              "identifier": {
                                "identifierValue": "BA5B324317B90CE3CE579BB98416E3EA"
                              },
                              "personIdentificationType": "Numero Identificacion"
                            },
                            {
                              "identifier": {
                                "identifierValue": "BA5B324317B90CE3CE579BB98416E3EA"
                              },
                              "personIdentificationType": "Numero Identificacion Social"
                            }
                          ],
                          "personProfile": {
                            "profileType": "1",
                            "residency": "863732343AF9B144031913851D3EE48F",
                            "pepProfile": {
                              "relatives": "69691C7BDCC3CE6D5D8A1361F22D04AC",
                              "role": "DDC5CB5C036717B55898FC761583A766"
                            },
                            "partyType": {
                              "description": "41EF894026A8CD4DA247105A6036DB70"
                            },
                            "activitySector": {
                              "description": "description activity",
                              "code": "011"
                            },
                            "economicActivity": {
                              "description": "description activity",
                              "code": "0B4596F8EFE110DC55BBE564213DFB33"
                            },
                            "segment": {
                              "description": "description activity",
                              "code": "012"
                            },
                            "group": {
                              "description": "description activity",
                              "code": "012"
                            },
                            "subGroup": {
                              "description": "description activity",
                              "code": "012"
                            },
                            "numberOfDependents": "CA51BFDCEC77F2BF342C5194B3695A3C",
                            "guardian": "pedro perez",
                            "spouse": "C8CF053EF5CE7AD676E6E8C0925FE368",
                            "burialInsurance": "burial Insurance",
                            "educationalLevel": "Major",
                            "residencyPlace": "BA5B324317B90CE3CE579BB98416E3EA",
                            "residencyYear": "D4DB7298729FCA8E66F1E69A28ECE2F0",
                            "propertyName": "B277B9D408D34013A4BE9FA416B72638",
                            "mortgage": 123.33
                          },
                          "companyReference": "001",
                          "employeeNumber": "B277B9D408D34013A4BE9FA416B72638",
                          "bankBranch": {
                            "branchReference": "123"
                          },
                          "totalOccupancy": "B277B9D408D34013A4BE9FA416B72638",
                          "specificActivity": "actividadEspecífica"
                        }
                      }
                    }
                  }
                ]
              },
              "example": {
                "partyReferenceDataDirectoryEntry": {
                  "partyReference": {
                    "location": [
                      {
                        "country": {
                          "code": "41EF894026A8CD4",
                          "name": "description"
                        }
                      }
                    ],
                    "referenceId": "A93B64AE1FB376A15EC21132E65B478F",
                    "contactPoint": [
                      {
                        "contactPointValue": "464E07AFC9E46359FB480839150595C5",
                        "contactPointType": "Electronic Address"
                      }
                    ],
                    "referenceIdCoppel": "41EF894026A8CD4DA247105A6036DB70",
                    "personName": {
                      "familyName": "92EAF3719159C372F3D50337E0A14F57",
                      "secondLastName": "08B3D5FA8337D8C29F10AB5909F20C56",
                      "firstName": "464E07AFC9E46359FB480839150595C5",
                      "secondName": "41EF894026A8CD4DA247105A6036DB70",
                      "marriedName": "064A1B28141F5A118925852BBB124BAF"
                    },
                    "dateOfBirth": "A93B64AE1FB376A15EC21132E65B478F",
                    "gender": "A93B64AE1FB376A15EC21132E65B478F",
                    "profession": "897",
                    "matrimonialRegime": "D4DB7298729FCA8E66F1E69A28ECE2F0",
                    "maritalStatus": "BA5B324317B90CE3CE579BB98416E3EA",
                    "nationality": "C8CF053EF5CE7AD676E6E8C0925FE368",
                    "birthPlace": {
                      "location": [
                        {
                          "locationDescription": "69691C7BDCC3CE6D5D8A1361F22D04AC",
                          "country": {
                            "code": "064A1B28141F5A1",
                            "name": "08B3D5FA8337D8C"
                          },
                          "longitude": "92EAF3719159C372F3D50337E0A14F57",
                          "latitude": "DBDF93DC6AE43DB67C56AB8A226DAA28"
                        }
                      ]
                    },
                    "identifications": [
                      {
                        "identifier": {
                          "identifierValue": "BA5B324317B90CE3CE579BB98416E3EA"
                        },
                        "personIdentificationType": "Registro Federal Contribuyentes"
                      },
                      {
                        "identifier": {
                          "identifierValue": "BA5B324317B90CE3CE579BB98416E3EA"
                        },
                        "personIdentificationType": "Documentos Migratorios De No Emigrantes"
                      },
                      {
                        "identifier": {
                          "identifierValue": "BA5B324317B90CE3CE579BB98416E3EA"
                        },
                        "personIdentificationType": "ClaveUnicaRegistroPoblacion"
                      },
                      {
                        "identifier": {
                          "identifierValue": "BA5B324317B90CE3CE579BB98416E3EA"
                        },
                        "personIdentificationType": "Codigo Identificacion"
                      },
                      {
                        "identifier": {
                          "identifierValue": "BA5B324317B90CE3CE579BB98416E3EA"
                        },
                        "personIdentificationType": "Numero Identificacion"
                      },
                      {
                        "identifier": {
                          "identifierValue": "BA5B324317B90CE3CE579BB98416E3EA"
                        },
                        "personIdentificationType": "Numero Identificacion Social"
                      }
                    ],
                    "personProfile": {
                      "profileType": "1",
                      "residency": "863732343AF9B144031913851D3EE48F",
                      "pepProfile": {
                        "relatives": "69691C7BDCC3CE6D5D8A1361F22D04AC",
                        "role": "DDC5CB5C036717B55898FC761583A766"
                      },
                      "partyType": {
                        "description": "41EF894026A8CD4DA247105A6036DB70"
                      },
                      "activitySector": {
                        "description": "description activity",
                        "code": "011"
                      },
                      "economicActivity": {
                        "description": "description activity",
                        "code": "0B4596F8EFE110DC55BBE564213DFB33"
                      },
                      "segment": {
                        "description": "description activity",
                        "code": "012"
                      },
                      "group": {
                        "description": "description activity",
                        "code": "012"
                      },
                      "subGroup": {
                        "description": "description activity",
                        "code": "012"
                      },
                      "numberOfDependents": "CA51BFDCEC77F2BF342C5194B3695A3C",
                      "guardian": "pedro perez",
                      "spouse": "C8CF053EF5CE7AD676E6E8C0925FE368",
                      "burialInsurance": "burial Insurance",
                      "educationalLevel": "Major",
                      "residencyPlace": "BA5B324317B90CE3CE579BB98416E3EA",
                      "residencyYear": "D4DB7298729FCA8E66F1E69A28ECE2F0",
                      "propertyName": "B277B9D408D34013A4BE9FA416B72638",
                      "mortgage": 123.33
                    },
                    "companyReference": "001",
                    "employeeNumber": "B277B9D408D34013A4BE9FA416B72638",
                    "bankBranch": {
                      "branchReference": "123"
                    },
                    "totalOccupancy": "B277B9D408D34013A4BE9FA416B72638",
                    "specificActivity": "actividadEspecífica"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/registerPartyReferenceDataDirectoryRs"
                    },
                    {
                      "example": {
                        "partyReferenceDataDirectoryEntry": {
                          "partyReference": {
                            "referenceId": "A93B64AE1FB376A15EC21132E65B478F"
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "partyReferenceDataDirectoryEntry": {
                    "partyReference": {
                      "referenceId": "A93B64AE1FB376A15EC21132E65B478F"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "400",
                        "status": "FAILED",
                        "message": "Bad Request"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "400",
                  "status": "FAILED",
                  "message": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "401",
                        "status": "FAILED",
                        "message": "Unauthorized"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "401",
                  "status": "FAILED",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "403",
                        "status": "FAILED",
                        "message": "Forbidden"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "403",
                  "status": "FAILED",
                  "message": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "404",
                        "status": "FAILED",
                        "message": "Not Found"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "404",
                  "status": "FAILED",
                  "message": "Not Found"
                }
              }
            }
          },
          "408": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "408",
                        "status": "FAILED",
                        "message": "Time Out"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "408",
                  "status": "FAILED",
                  "message": "Time Out"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "500",
                        "status": "FAILED",
                        "message": "Internal Server Error"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "500",
                  "status": "FAILED",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },

    "/v1/retrievePaymentBalances/retrieve": {
      "post": {
        "tags": ["v1"],
        "summary": "V1RetrievePaymentBalancesRetrieve_POST",
        "description": "Obtener los totales de pagos referenciados,  pagos de WU/OV/VG para que se consultan las transacciones de abono a cuenta.",
        "operationId": "V1RetrievePaymentBalancesRetrieve_POST",
        "parameters": [
          {
            "name": "consumerRequestId",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Example"
            }
          },
          {
            "name": "token",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Example"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/retrievePaymentBalancesFacilityRq"
                  },
                  {
                    "example": {
                      "paymentBalancesFacility": {
                        "companyReference": "001",
                        "branch": "112",
                        "user": "50455252454f20494e54454e534f20",
                        "financialTransaction": "50455252454f20494e54454e534f20"
                      }
                    }
                  }
                ]
              },
              "example": {
                "paymentBalancesFacility": {
                  "companyReference": "001",
                  "branch": "112",
                  "user": "50455252454f20494e54454e534f20",
                  "financialTransaction": "50455252454f20494e54454e534f20"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/retrievePaymentBalancesFacilityRs"
                    },
                    {
                      "example": {
                        "paymentBalancesFacility": {
                          "serviceAmount": "863732343AF9B144031913851D3EE48F",
                          "currency": "USD",
                          "serviceAmountCharge": "863732343AF9B144031913851D3EE48F",
                          "descriptionAmountService": "863732343AF9B144031913851D3EE48F",
                          "descriptionAmountChargeService": "A93B64AE1FB376A15EC21132E65B478F",
                          "description": "descripcion"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "paymentBalancesFacility": {
                    "serviceAmount": "863732343AF9B144031913851D3EE48F",
                    "currency": "USD",
                    "serviceAmountCharge": "863732343AF9B144031913851D3EE48F",
                    "descriptionAmountService": "863732343AF9B144031913851D3EE48F",
                    "descriptionAmountChargeService": "A93B64AE1FB376A15EC21132E65B478F",
                    "description": "descripcion"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "400",
                        "status": "FAILED",
                        "message": "Bad Request"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "400",
                  "status": "FAILED",
                  "message": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "401",
                        "status": "FAILED",
                        "message": "Unauthorized"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "401",
                  "status": "FAILED",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "403",
                        "status": "FAILED",
                        "message": "Forbidden"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "403",
                  "status": "FAILED",
                  "message": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "404",
                        "status": "FAILED",
                        "message": "Not Found"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "404",
                  "status": "FAILED",
                  "message": "Not Found"
                }
              }
            }
          },
          "408": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "408",
                        "status": "FAILED",
                        "message": "Time Out"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "408",
                  "status": "FAILED",
                  "message": "Time Out"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "500",
                        "status": "FAILED",
                        "message": "Internal Server Error"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "500",
                  "status": "FAILED",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },

    "/v1/onBoardingParty/execute": {
      "put": {
        "tags": ["v1"],
        "summary": "V1OnBoardingPartyExecute_PUT",
        "description": "Servicio de negocio encargado de ejecutar el proceso de onboarding de consultar el prospecto de cliente y guardar sus información.",
        "operationId": "V1OnBoardingPartyExecute_PUT",
        "parameters": [
          {
            "name": "consumerRequestId",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Example"
            }
          },
          {
            "name": "token",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Example"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/executeOnBoardingPartyRq"
                  },
                  {
                    "example": {
                      "sessionDialogueIdentification": "GAFA9603064C3"
                    }
                  }
                ]
              },
              "example": {
                "sessionDialogueIdentification": "GAFA9603064C3"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/executeOnBoardingPartyRs"
                    },
                    {
                      "example": {
                        "partyReference": {
                          "referenceId": "c2a63a9f1fce966ecabae6e7ee4204a3"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "partyReference": {
                    "referenceId": "c2a63a9f1fce966ecabae6e7ee4204a3"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "400",
                        "status": "FAILED",
                        "message": "Bad Request"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "400",
                  "status": "FAILED",
                  "message": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "401",
                        "status": "FAILED",
                        "message": "Unauthorized"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "401",
                  "status": "FAILED",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "403",
                        "status": "FAILED",
                        "message": "Forbidden"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "403",
                  "status": "FAILED",
                  "message": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "404",
                        "status": "FAILED",
                        "message": "Not Found"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "404",
                  "status": "FAILED",
                  "message": "Not Found"
                }
              }
            }
          },
          "408": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "408",
                        "status": "FAILED",
                        "message": "Time Out"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "408",
                  "status": "FAILED",
                  "message": "Time Out"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "500",
                        "status": "FAILED",
                        "message": "Internal Server Error"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "500",
                  "status": "FAILED",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },

    "/v1/customer/retrieve": {
      "post": {
        "tags": ["v1"],
        "summary": "V1CustomerRetrieve_POST",
        "description": "Realiza la consulta del cliente por diferentes parámetros.",
        "operationId": "V1CustomerRetrieve_POST",
        "parameters": [
          {
            "name": "consumerRequestId",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Example"
            }
          },
          {
            "name": "token",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Example"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/retrieveCustomerRq"
                  },
                  {
                    "example": {
                      "channelFacility": {
                        "channelReferenceId": "2"
                      },
                      "companyReference": "001",
                      "option": 3,
                      "partyReference": {
                        "personName": {
                          "familyName": "15276e7fd43ab63d6b0a6a3bc03f313f",
                          "secondLastName": "07232a5d792f96d44ac593e43d6592c3",
                          "firstName": "1276c190f7197fd82d7f0ad19c1c93d2",
                          "secondName": "da598699cef750ee8e5ef3b2daf47719",
                          "fullName": "da598699cef750ee8e5ef3b2daf47719"
                        },
                        "identifications": [
                          {
                            "identifier": {
                              "identifierValue": "A93B64AE1FB376A15EC21132E65B478F"
                            },
                            "personIdentificationType": "Registro Federal Contribuyentes"
                          }
                        ],
                        "dateOfBirth": "f5c4aa0648d87d54176a1e77000b6be8",
                        "contactPoint": [
                          {
                            "contactPointValue": "c2a63a9f1fce966ecabae6e7ee4204a3",
                            "contactPointType": "cellphone"
                          }
                        ],
                        "referenceId": "c2a63a9f1fce966ecabae6e7ee4204a3"
                      },
                      "paymentCard": {
                        "cardNumber": "D4DB7298729FCA8E66F1E69A28ECE2F0"
                      },
                      "accountIdentification": [
                        {
                          "identifierValue": "5F600B3C636E509D8B739C57EC1AAA4F",
                          "accountIdentificationType": "Account Number"
                        }
                      ]
                    }
                  }
                ]
              },
              "example": {
                "channelFacility": {
                  "channelReferenceId": "2"
                },
                "companyReference": "001",
                "option": 3,
                "partyReference": {
                  "personName": {
                    "familyName": "15276e7fd43ab63d6b0a6a3bc03f313f",
                    "secondLastName": "07232a5d792f96d44ac593e43d6592c3",
                    "firstName": "1276c190f7197fd82d7f0ad19c1c93d2",
                    "secondName": "da598699cef750ee8e5ef3b2daf47719",
                    "fullName": "da598699cef750ee8e5ef3b2daf47719"
                  },
                  "identifications": [
                    {
                      "identifier": {
                        "identifierValue": "A93B64AE1FB376A15EC21132E65B478F"
                      },
                      "personIdentificationType": "Registro Federal Contribuyentes"
                    }
                  ],
                  "dateOfBirth": "f5c4aa0648d87d54176a1e77000b6be8",
                  "contactPoint": [
                    {
                      "contactPointValue": "c2a63a9f1fce966ecabae6e7ee4204a3",
                      "contactPointType": "cellphone"
                    }
                  ],
                  "referenceId": "c2a63a9f1fce966ecabae6e7ee4204a3"
                },
                "paymentCard": {
                  "cardNumber": "D4DB7298729FCA8E66F1E69A28ECE2F0"
                },
                "accountIdentification": [
                  {
                    "identifierValue": "5F600B3C636E509D8B739C57EC1AAA4F",
                    "accountIdentificationType": "Account Number"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/retrieveCustomerRs"
                    },
                    {
                      "example": {
                        "partyReferenceDataDirectoryEntryCollection": [
                          {
                            "partyReference": {
                              "personName": {
                                "familyName": "15276e7fd43ab63d6b0a6a3bc03f313f",
                                "secondLastName": "07232a5d792f96d44ac593e43d6592c3",
                                "firstName": "1276c190f7197fd82d7f0ad19c1c93d2",
                                "secondName": "da598699cef750ee8e5ef3b2daf47719",
                                "fullName": "da598699cef750ee8e5ef3b2daf47719"
                              },
                              "identifications": [
                                {
                                  "identifier": {
                                    "identifierValue": "A93B64AE1FB376A15EC21132E65B478F"
                                  },
                                  "personIdentificationType": "Registro Federal Contribuyentes"
                                }
                              ],
                              "dateOfBirth": "f5c4aa0648d87d54176a1e77000b6be8",
                              "referenceId": "c2a63a9f1fce966ecabae6e7ee4204a3",
                              "referenceIdCoppel": "c2a63a9f1fce966ecabae6e7ee4204a3"
                            }
                          },
                          {
                            "partyReference": {
                              "personName": {
                                "familyName": "15276e7fd43ab63d6b0a6a3bc03f313f",
                                "secondLastName": "07232a5d792f96d44ac593e43d6592c3",
                                "firstName": "1276c190f7197fd82d7f0ad19c1c93d2",
                                "secondName": "da598699cef750ee8e5ef3b2daf47719",
                                "fullName": "da598699cef750ee8e5ef3b2daf47719"
                              },
                              "identifications": [
                                {
                                  "identifier": {
                                    "identifierValue": "A93B64AE1FB376A15EC21132E65B478F"
                                  },
                                  "personIdentificationType": "Registro Federal Contribuyentes"
                                }
                              ],
                              "dateOfBirth": "f5c4aa0648d87d54176a1e77000b6be8",
                              "referenceId": "c2a63a9f1fce966ecabae6e7ee4204a3",
                              "referenceIdCoppel": "c2a63a9f1fce966ecabae6e7ee4204a3"
                            }
                          }
                        ],
                        "accountIdentification": [
                          {
                            "identifierValue": "5F600B3C636E509D8B739C57EC1AAA4F",
                            "accountIdentificationType": "Account Number"
                          }
                        ]
                      }
                    }
                  ]
                },
                "example": {
                  "partyReferenceDataDirectoryEntryCollection": [
                    {
                      "partyReference": {
                        "personName": {
                          "familyName": "15276e7fd43ab63d6b0a6a3bc03f313f",
                          "secondLastName": "07232a5d792f96d44ac593e43d6592c3",
                          "firstName": "1276c190f7197fd82d7f0ad19c1c93d2",
                          "secondName": "da598699cef750ee8e5ef3b2daf47719",
                          "fullName": "da598699cef750ee8e5ef3b2daf47719"
                        },
                        "identifications": [
                          {
                            "identifier": {
                              "identifierValue": "A93B64AE1FB376A15EC21132E65B478F"
                            },
                            "personIdentificationType": "Registro Federal Contribuyentes"
                          }
                        ],
                        "dateOfBirth": "f5c4aa0648d87d54176a1e77000b6be8",
                        "referenceId": "c2a63a9f1fce966ecabae6e7ee4204a3",
                        "referenceIdCoppel": "c2a63a9f1fce966ecabae6e7ee4204a3"
                      }
                    },
                    {
                      "partyReference": {
                        "personName": {
                          "familyName": "15276e7fd43ab63d6b0a6a3bc03f313f",
                          "secondLastName": "07232a5d792f96d44ac593e43d6592c3",
                          "firstName": "1276c190f7197fd82d7f0ad19c1c93d2",
                          "secondName": "da598699cef750ee8e5ef3b2daf47719",
                          "fullName": "da598699cef750ee8e5ef3b2daf47719"
                        },
                        "identifications": [
                          {
                            "identifier": {
                              "identifierValue": "A93B64AE1FB376A15EC21132E65B478F"
                            },
                            "personIdentificationType": "Registro Federal Contribuyentes"
                          }
                        ],
                        "dateOfBirth": "f5c4aa0648d87d54176a1e77000b6be8",
                        "referenceId": "c2a63a9f1fce966ecabae6e7ee4204a3",
                        "referenceIdCoppel": "c2a63a9f1fce966ecabae6e7ee4204a3"
                      }
                    }
                  ],
                  "accountIdentification": [
                    {
                      "identifierValue": "5F600B3C636E509D8B739C57EC1AAA4F",
                      "accountIdentificationType": "Account Number"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "400",
                        "status": "FAILED",
                        "message": "Bad Request"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "400",
                  "status": "FAILED",
                  "message": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "401",
                        "status": "FAILED",
                        "message": "Unauthorized"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "401",
                  "status": "FAILED",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "403",
                        "status": "FAILED",
                        "message": "Forbidden"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "403",
                  "status": "FAILED",
                  "message": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "404",
                        "status": "FAILED",
                        "message": "Not Found"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "404",
                  "status": "FAILED",
                  "message": "Not Found"
                }
              }
            }
          },
          "408": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "408",
                        "status": "FAILED",
                        "message": "Time Out"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "408",
                  "status": "FAILED",
                  "message": "Time Out"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "500",
                        "status": "FAILED",
                        "message": "Internal Server Error"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "500",
                  "status": "FAILED",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },

    "/v1/customerCard/retrieve": {
      "post": {
        "tags": ["v1"],
        "summary": "V1CustomerCardRetrieve_POST",
        "description": "En este microservicio se realiza la consulta de datos (nombre(s), apellido(s), RFC y número de tarjeta) del cliente titular de una tarjeta de crédito de las tablas sd_maecred, sd_tarjeta y si_cliente. Estas consultas se realizan para consultar los datos del cliente titular.",
        "operationId": "V1CustomerCardRetrieve_POST",
        "parameters": [
          {
            "name": "consumerRequestId",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Example"
            }
          },
          {
            "name": "token",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Example"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/retrieveCustomerCardRq"
                  },
                  {
                    "example": {
                      "companyReference": "001",
                      "accountIdentification": [
                        {
                          "identifierValue": "5F600B3C636E509D8B739C57EC1AAA4F",
                          "accountIdentificationType": "Account Number"
                        }
                      ]
                    }
                  }
                ]
              },
              "example": {
                "companyReference": "001",
                "accountIdentification": [
                  {
                    "identifierValue": "5F600B3C636E509D8B739C57EC1AAA4F",
                    "accountIdentificationType": "Account Number"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/retrieveCustomerCardRs"
                    },
                    {
                      "example": {
                        "partyReference": {
                          "personName": {
                            "familyName": "15276e7fd43ab63d6b0a6a3bc03f313f",
                            "secondLastName": "07232a5d792f96d44ac593e43d6592c3",
                            "firstName": "1276c190f7197fd82d7f0ad19c1c93d2",
                            "secondName": "da598699cef750ee8e5ef3b2daf47719"
                          },
                          "identifications": [
                            {
                              "identifier": {
                                "identifierValue": "A93B64AE1FB376A15EC21132E65B478F"
                              },
                              "personIdentificationType": "Registro Federal Contribuyentes"
                            }
                          ],
                          "referenceId": "c2a63a9f1fce966ecabae6e7ee4204a3"
                        },
                        "paymentCard": {
                          "cardNumber": "D4DB7298729FCA8E66F1E69A28ECE2F0"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "partyReference": {
                    "personName": {
                      "familyName": "15276e7fd43ab63d6b0a6a3bc03f313f",
                      "secondLastName": "07232a5d792f96d44ac593e43d6592c3",
                      "firstName": "1276c190f7197fd82d7f0ad19c1c93d2",
                      "secondName": "da598699cef750ee8e5ef3b2daf47719"
                    },
                    "identifications": [
                      {
                        "identifier": {
                          "identifierValue": "A93B64AE1FB376A15EC21132E65B478F"
                        },
                        "personIdentificationType": "Registro Federal Contribuyentes"
                      }
                    ],
                    "referenceId": "c2a63a9f1fce966ecabae6e7ee4204a3"
                  },
                  "paymentCard": {
                    "cardNumber": "D4DB7298729FCA8E66F1E69A28ECE2F0"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "400",
                        "status": "FAILED",
                        "message": "Bad Request"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "400",
                  "status": "FAILED",
                  "message": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "401",
                        "status": "FAILED",
                        "message": "Unauthorized"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "401",
                  "status": "FAILED",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "403",
                        "status": "FAILED",
                        "message": "Forbidden"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "403",
                  "status": "FAILED",
                  "message": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "404",
                        "status": "FAILED",
                        "message": "Not Found"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "404",
                  "status": "FAILED",
                  "message": "Not Found"
                }
              }
            }
          },
          "408": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "408",
                        "status": "FAILED",
                        "message": "Time Out"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "408",
                  "status": "FAILED",
                  "message": "Time Out"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "500",
                        "status": "FAILED",
                        "message": "Internal Server Error"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "500",
                  "status": "FAILED",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },

    "/v1/lifeInsurance/retrieve": {
      "post": {
        "tags": ["v1"],
        "summary": "V1LifeInsuranceRetrieve_POST",
        "description": "Este microservicio realiza la validación según el estado en que se encuentre el club de protección del cliente y valida que mensaje mostrar al usuario..",
        "operationId": "V1LifeInsuranceRetrieve_POST",
        "parameters": [
          {
            "name": "consumerRequestId",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Example"
            }
          },
          {
            "name": "token",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Example"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/retrieveLifeInsuranceRq"
                  },
                  {
                    "example": {
                      "partyReference": {
                        "referenceId": "5F600B3C636E509D8B739C57EC1AAA4F"
                      },
                      "paymentCard": {
                        "cardNumber": "D4DB7298729FCA8E66F1E69A28ECE2F0"
                      },
                      "accountIdentification": [
                        {
                          "identifierValue": "5F600B3C636E509D8B739C57EC1AAA4F",
                          "accountIdentificationType": "Account Number"
                        }
                      ],
                      "creditCardFacility": {
                        "account": {
                          "accountIdentification": [
                            {
                              "identifierValue": "5F600B3C636E509D8B739C57EC1AAA4F",
                              "accountIdentificationType": "Account Number"
                            }
                          ]
                        }
                      }
                    }
                  }
                ]
              },
              "example": {
                "partyReference": {
                  "referenceId": "5F600B3C636E509D8B739C57EC1AAA4F"
                },
                "paymentCard": {
                  "cardNumber": "D4DB7298729FCA8E66F1E69A28ECE2F0"
                },
                "accountIdentification": [
                  {
                    "identifierValue": "5F600B3C636E509D8B739C57EC1AAA4F",
                    "accountIdentificationType": "Account Number"
                  }
                ],
                "creditCardFacility": {
                  "account": {
                    "accountIdentification": [
                      {
                        "identifierValue": "5F600B3C636E509D8B739C57EC1AAA4F",
                        "accountIdentificationType": "Account Number"
                      }
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/retrieveLifeInsuranceRs"
                    },
                    {
                      "example": {
                        "lifeInsurance": {
                          "endDate": "2023-12-24"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "lifeInsurance": {
                    "endDate": "2023-12-24"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "400",
                        "status": "FAILED",
                        "message": "Bad Request"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "400",
                  "status": "FAILED",
                  "message": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "401",
                        "status": "FAILED",
                        "message": "Unauthorized"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "401",
                  "status": "FAILED",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "403",
                        "status": "FAILED",
                        "message": "Forbidden"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "403",
                  "status": "FAILED",
                  "message": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "404",
                        "status": "FAILED",
                        "message": "Not Found"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "404",
                  "status": "FAILED",
                  "message": "Not Found"
                }
              }
            }
          },
          "408": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "408",
                        "status": "FAILED",
                        "message": "Time Out"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "408",
                  "status": "FAILED",
                  "message": "Time Out"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "500",
                        "status": "FAILED",
                        "message": "Internal Server Error"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "500",
                  "status": "FAILED",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },

    "/v1/customerRelationshipInvolvement/initiate": {
      "post": {
        "tags": ["v1"],
        "summary": "V1CustomerRelationshipInvolvementInitiate_POST",
        "description": "Servicio encargado de realizar el registro de las referencias proporcionadas por el cliente solicitante del crédito en el proceso de la captura de los paramétricos del cliente para la evaluación de la solicitud.",
        "operationId": "V1CustomerRelationshipInvolvementInitiate_POST",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Example"
            }
          },
          {
            "name": "consumerRequestId",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Example"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/initiateCustomerRelationshipInvolvementRq"
                  },
                  {
                    "example": {
                      "sourceChannel": "001",
                      "applicationReferenceId": "sd232312",
                      "partyReference": {
                        "referenceId": "5F600B3C636E509D8B739C57EC1AAA4F",
                        "employeeNumber": "5F600B3C636E509D8B739C57EC1AAA4F",
                        "companyReference": "001"
                      },
                      "customerRelationshipInvolvement": {
                        "customerRelationshipInvolvementType": "PEP",
                        "sequence": 2345,
                        "partyReference": {
                          "matrimonialRegime": "B277B9D408D34013A4BE9FA416B72638",
                          "profession": "125",
                          "specificActivity": "enginer",
                          "totalOccupancy": "E65B478FA93B64AE1",
                          "birthPlace": {
                            "location": [
                              {
                                "country": {
                                  "name": "0b98720dcb2ccc5b87"
                                }
                              }
                            ]
                          },
                          "location": [
                            {
                              "postalCode": "b98f83032f6e8ca0c8f5a38bca1e3d75",
                              "neighborhood": "b98f83032f6e8ca0c8f5a38bca1e3d75",
                              "locationObservations": "b98f83032f6e8ca0c8f5a38bca1e3d75",
                              "city": {
                                "code": "b98f83032f6e8ca0c8f5a38bca1e3d75"
                              },
                              "country": {
                                "code": "MEX"
                              },
                              "state": {
                                "code": "b98f83032f6e8ca0c8f5a38bca1e3d75",
                                "inegiCode": "b98f83032f6e8ca0d75"
                              },
                              "province": {
                                "code": "0b98720dcb2cc6fd60358a45dfbc5b87",
                                "name": "0b98720dcb2cc6fd60358a45dfbc5b87"
                              },
                              "street": {
                                "streetName": "dbdf93dc6ae43db67c56ab8a226daa28",
                                "streetNumber": "dbdf93dc6ae43db67c56ab8a226daa28"
                              },
                              "countyDistrict": {
                                "code": "6512bd43d9ca990b0a82652dca",
                                "name": "6512bd43d9a82652dca",
                                "inegiCode": "6512bb0a82652dca"
                              },
                              "houseNumber": "6512bd43d9caa6e02c990b0a82652dca",
                              "externalHouseNumber": "6512bd43d9caa6e02c990b0a82652dca",
                              "internalHouseNumber": "6512bd43d9caa6e02c990b0a82652dca",
                              "neighborhoodNumber": "6512bd43d9caa6e02c990b0a82652dca",
                              "cardinalPoint": "NORTE",
                              "isHousingUnit": true,
                              "locationReferencePoint": "6512bd43d9caa6e02c990b0a82652dca",
                              "sector": "6512bd43d9caa6e02c990b0a82652dca",
                              "stage": "6512bd43d9caa6e02c990b0a82652dca",
                              "lot": "6512bd43d9caa6e02c990b0a82652dca",
                              "building": "6512bd43d9caa6e02c990b0a82652dca",
                              "entryPoint": "6512bd43d9caa6e02c990b0a82652dca",
                              "block": "6512bd43d9caa6e02c990b0a82652dca",
                              "addressWorkingInhabitantsNumber": "6512bd43d9caa6e02c990b0a82652dca",
                              "locationDescription": "6512bd43d9caa6e02c990b0a82652dca",
                              "locationAddressType": "PARTY_ADDRESS",
                              "locationInegiCode": "6512bd43d9caa6e02c990b0a82652dca"
                            }
                          ],
                          "referenceId": "5F600B3C636E509D8B739C57EC1AAA4F",
                          "referenceIdCoppel": "5F600B3C636E509D8B739C57EC1AAA4F",
                          "bankBranch": {
                            "branchReference": "1234"
                          },
                          "personName": {
                            "firstName": "1276c190f7197fd82d7f0ad19c1c93d2",
                            "secondName": "da598699cef750ee8e5ef3b2daf47719",
                            "familyName": "15276e7fd43ab63d6b0a6a3bc03f313f",
                            "secondLastName": "07232a5d792f96d44ac593e43d6592c3",
                            "marriedName": "07232a5d792f96d44ac593e43d6592c3"
                          },
                          "maritalStatus": "GAFA9603064C3",
                          "gender": "GAFA9603064C3",
                          "nationality": "GAFA9603064C3",
                          "contactPoint": [
                            {
                              "contactPointValue": "+93a44faeb0b52452bcd6cf1cc7fae9ba",
                              "contactPointType": "cellphone",
                              "contactPointProviderName": "Telcel",
                              "contactPointStatus": "V",
                              "contactPointActiveStatus": true,
                              "registrationDate": "2023-09-27 13:30:00"
                            },
                            {
                              "contactPointValue": "W8uYCJUfwARjTvFBm4PdOH6WVAsbDW/1XLwbVxSDcFs",
                              "contactPointType": "Electronic Address",
                              "contactPointStatus": "V"
                            },
                            {
                              "contactPointValue": "+93a44faeb0b52452bcd6cf1cc7fae9ba",
                              "contactPointType": "postalCode",
                              "contactPointStatus": "V"
                            }
                          ],
                          "identifications": [
                            {
                              "identifier": {
                                "identifierValue": "A93B64AE1FB376A15EC21132E65B478F"
                              },
                              "personIdentificationType": "Numero Identificacion"
                            },
                            {
                              "identifier": {
                                "identifierValue": "A93B64AE1FB376A15EC21132E65B478F"
                              },
                              "personIdentificationType": "Codigo Identificacion"
                            },
                            {
                              "identifier": {
                                "identifierValue": "A93B64AE1FB376A15EC21132E65B478F"
                              },
                              "personIdentificationType": "Registro Federal Contribuyentes"
                            },
                            {
                              "identifier": {
                                "identifierValue": "A93B64AE1FB376A15EC21132E65B478F"
                              },
                              "personIdentificationType": "ClaveUnicaRegistroPoblacion"
                            }
                          ],
                          "dateOfBirth": "A93B64AE1FB376A15EC21132E65B478F",
                          "personProfile": {
                            "pepProfile": {
                              "role": "1276c190f7197fd82d7f0ad19c1c93d2",
                              "ownershipStake": 75,
                              "associationDescription": "Club de golf",
                              "relatives": "BA5B324317B90CE3C"
                            },
                            "profileType": "1",
                            "propertyName": "6E3EA24317B90CE3CEBA5B3579BB9841",
                            "educationalLevel": "10",
                            "numberOfDependents": "CA51BFDCEC77F2BF342C5194B3695A3C",
                            "spouse": "C8CF053EF5CE7AD676E6E8C0925FE368",
                            "residency": "579BB98416E3EA24317B90CE3CEBA5B3",
                            "residencyYear": "CE579BB98416E3EA",
                            "residencyPlace": "BA5B324317B90CE3CE579BB98416E3EA",
                            "burialInsurance": "1",
                            "guardian": "DEF",
                            "mortgage": 9201,
                            "activitySector": {
                              "code": "3"
                            },
                            "group": {
                              "code": "2"
                            },
                            "partyType": {
                              "description": "17B90CE3CCE3CE579BB98416E3EA"
                            },
                            "segment": {
                              "code": "4"
                            },
                            "subGroup": {
                              "code": "5"
                            },
                            "economicActivity": {
                              "code": "3"
                            }
                          }
                        },
                        "partyRelationshipType": "15276e7fd43ab63d6b0a6a3bc03f313f",
                        "dateTime": "2024-05-13"
                      }
                    }
                  }
                ]
              },
              "example": {
                "sourceChannel": "001",
                "applicationReferenceId": "sd232312",
                "partyReference": {
                  "referenceId": "5F600B3C636E509D8B739C57EC1AAA4F",
                  "employeeNumber": "5F600B3C636E509D8B739C57EC1AAA4F",
                  "companyReference": "001"
                },
                "customerRelationshipInvolvement": {
                  "customerRelationshipInvolvementType": "PEP",
                  "sequence": 2345,
                  "partyReference": {
                    "matrimonialRegime": "B277B9D408D34013A4BE9FA416B72638",
                    "profession": "125",
                    "specificActivity": "enginer",
                    "totalOccupancy": "E65B478FA93B64AE1",
                    "birthPlace": {
                      "location": [
                        {
                          "country": {
                            "name": "0b98720dcb2ccc5b87"
                          }
                        }
                      ]
                    },
                    "location": [
                      {
                        "postalCode": "b98f83032f6e8ca0c8f5a38bca1e3d75",
                        "neighborhood": "b98f83032f6e8ca0c8f5a38bca1e3d75",
                        "locationObservations": "b98f83032f6e8ca0c8f5a38bca1e3d75",
                        "city": {
                          "code": "b98f83032f6e8ca0c8f5a38bca1e3d75"
                        },
                        "country": {
                          "code": "MEX"
                        },
                        "state": {
                          "code": "b98f83032f6e8ca0c8f5a38bca1e3d75",
                          "inegiCode": "b98f83032f6e8ca0d75"
                        },
                        "province": {
                          "code": "0b98720dcb2cc6fd60358a45dfbc5b87",
                          "name": "0b98720dcb2cc6fd60358a45dfbc5b87"
                        },
                        "street": {
                          "streetName": "dbdf93dc6ae43db67c56ab8a226daa28",
                          "streetNumber": "dbdf93dc6ae43db67c56ab8a226daa28"
                        },
                        "countyDistrict": {
                          "code": "6512bd43d9ca990b0a82652dca",
                          "name": "6512bd43d9a82652dca",
                          "inegiCode": "6512bb0a82652dca"
                        },
                        "houseNumber": "6512bd43d9caa6e02c990b0a82652dca",
                        "externalHouseNumber": "6512bd43d9caa6e02c990b0a82652dca",
                        "internalHouseNumber": "6512bd43d9caa6e02c990b0a82652dca",
                        "neighborhoodNumber": "6512bd43d9caa6e02c990b0a82652dca",
                        "cardinalPoint": "NORTE",
                        "isHousingUnit": true,
                        "locationReferencePoint": "6512bd43d9caa6e02c990b0a82652dca",
                        "sector": "6512bd43d9caa6e02c990b0a82652dca",
                        "stage": "6512bd43d9caa6e02c990b0a82652dca",
                        "lot": "6512bd43d9caa6e02c990b0a82652dca",
                        "building": "6512bd43d9caa6e02c990b0a82652dca",
                        "entryPoint": "6512bd43d9caa6e02c990b0a82652dca",
                        "block": "6512bd43d9caa6e02c990b0a82652dca",
                        "addressWorkingInhabitantsNumber": "6512bd43d9caa6e02c990b0a82652dca",
                        "locationDescription": "6512bd43d9caa6e02c990b0a82652dca",
                        "locationAddressType": "PARTY_ADDRESS",
                        "locationInegiCode": "6512bd43d9caa6e02c990b0a82652dca"
                      }
                    ],
                    "referenceId": "5F600B3C636E509D8B739C57EC1AAA4F",
                    "referenceIdCoppel": "5F600B3C636E509D8B739C57EC1AAA4F",
                    "bankBranch": {
                      "branchReference": "1234"
                    },
                    "personName": {
                      "firstName": "1276c190f7197fd82d7f0ad19c1c93d2",
                      "secondName": "da598699cef750ee8e5ef3b2daf47719",
                      "familyName": "15276e7fd43ab63d6b0a6a3bc03f313f",
                      "secondLastName": "07232a5d792f96d44ac593e43d6592c3",
                      "marriedName": "07232a5d792f96d44ac593e43d6592c3"
                    },
                    "maritalStatus": "GAFA9603064C3",
                    "gender": "GAFA9603064C3",
                    "nationality": "GAFA9603064C3",
                    "contactPoint": [
                      {
                        "contactPointValue": "+93a44faeb0b52452bcd6cf1cc7fae9ba",
                        "contactPointType": "cellphone",
                        "contactPointProviderName": "Telcel",
                        "contactPointStatus": "V",
                        "contactPointActiveStatus": true,
                        "registrationDate": "2023-09-27 13:30:00"
                      },
                      {
                        "contactPointValue": "W8uYCJUfwARjTvFBm4PdOH6WVAsbDW/1XLwbVxSDcFs",
                        "contactPointType": "Electronic Address",
                        "contactPointStatus": "V"
                      },
                      {
                        "contactPointValue": "+93a44faeb0b52452bcd6cf1cc7fae9ba",
                        "contactPointType": "postalCode",
                        "contactPointStatus": "V"
                      }
                    ],
                    "identifications": [
                      {
                        "identifier": {
                          "identifierValue": "A93B64AE1FB376A15EC21132E65B478F"
                        },
                        "personIdentificationType": "Numero Identificacion"
                      },
                      {
                        "identifier": {
                          "identifierValue": "A93B64AE1FB376A15EC21132E65B478F"
                        },
                        "personIdentificationType": "Codigo Identificacion"
                      },
                      {
                        "identifier": {
                          "identifierValue": "A93B64AE1FB376A15EC21132E65B478F"
                        },
                        "personIdentificationType": "Registro Federal Contribuyentes"
                      },
                      {
                        "identifier": {
                          "identifierValue": "A93B64AE1FB376A15EC21132E65B478F"
                        },
                        "personIdentificationType": "ClaveUnicaRegistroPoblacion"
                      }
                    ],
                    "dateOfBirth": "A93B64AE1FB376A15EC21132E65B478F",
                    "personProfile": {
                      "pepProfile": {
                        "role": "1276c190f7197fd82d7f0ad19c1c93d2",
                        "ownershipStake": 75,
                        "associationDescription": "Club de golf",
                        "relatives": "BA5B324317B90CE3C"
                      },
                      "profileType": "1",
                      "propertyName": "6E3EA24317B90CE3CEBA5B3579BB9841",
                      "educationalLevel": "10",
                      "numberOfDependents": "CA51BFDCEC77F2BF342C5194B3695A3C",
                      "spouse": "C8CF053EF5CE7AD676E6E8C0925FE368",
                      "residency": "579BB98416E3EA24317B90CE3CEBA5B3",
                      "residencyYear": "CE579BB98416E3EA",
                      "residencyPlace": "BA5B324317B90CE3CE579BB98416E3EA",
                      "burialInsurance": "1",
                      "guardian": "DEF",
                      "mortgage": 9201,
                      "activitySector": {
                        "code": "3"
                      },
                      "group": {
                        "code": "2"
                      },
                      "partyType": {
                        "description": "17B90CE3CCE3CE579BB98416E3EA"
                      },
                      "segment": {
                        "code": "4"
                      },
                      "subGroup": {
                        "code": "5"
                      },
                      "economicActivity": {
                        "code": "3"
                      }
                    }
                  },
                  "partyRelationshipType": "15276e7fd43ab63d6b0a6a3bc03f313f",
                  "dateTime": "2024-05-13"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "400",
                        "status": "FAILED",
                        "message": "Bad Request"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "400",
                  "status": "FAILED",
                  "message": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "401",
                        "status": "FAILED",
                        "message": "Unauthorized"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "401",
                  "status": "FAILED",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "403",
                        "status": "FAILED",
                        "message": "Forbidden"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "403",
                  "status": "FAILED",
                  "message": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "404",
                        "status": "FAILED",
                        "message": "Not Found"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "404",
                  "status": "FAILED",
                  "message": "Not Found"
                }
              }
            }
          },
          "408": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "408",
                        "status": "FAILED",
                        "message": "Time Out"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "408",
                  "status": "FAILED",
                  "message": "Time Out"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "500",
                        "status": "FAILED",
                        "message": "Internal Server Error"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "500",
                  "status": "FAILED",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },

    "/v1/customerLocationReference/register": {
      "post": {
        "tags": ["v1"],
        "summary": "V1CustomerLocationReferenceRegister_POST",
        "description": "Operacion que permite el manejo del proceso de guardado de la direccion del cliente.",
        "operationId": "V1CustomerLocationReferenceRegister_POST",
        "parameters": [
          {
            "name": "consumerRequestId",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Example"
            }
          },
          {
            "name": "token",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Example"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/registerCustomerLocationReferenceRq"
                  },
                  {
                    "example": {
                      "customerLocationReference": {
                        "location": [
                          {
                            "locationAddressType": "PARTY_ADDRESS",
                            "locationInegiCode": "98f13708210194c475687be6106a3b84",
                            "street": {
                              "streetNumber": "98f13708210194c475687be6106a3b84",
                              "streetName": "dbdf93dc6ae43db67c56ab8a226daa28"
                            },
                            "neighborhood": "4e1dccc679b3bbda511dd1e4f2864fd0",
                            "locationDescription": "837605ddb5847fe471dd3dd01fef9443",
                            "locationReferencePoint": "d41e0312b78db54d2e464dd97e54178a",
                            "locationObservations": "d41e0312b78db54d2e464dd97e54178a",
                            "neighborhoodNumber": "d3d9446802a44259755d38e6d163e820",
                            "cityNumber": 2,
                            "country": {
                              "code": "24c53cacba758b4fee3bebc22d9a63d3"
                            },
                            "countyDistrict": {
                              "code": "24c53cacba758b4fee3bebc22d9a63d3",
                              "name": "24c53cacba758b4fee3bebc22d9a63d3",
                              "inegiCode": "b5b41fac0361d157d9673ecb926af5ae"
                            },
                            "postalCode": "049d64bd087ad59d9e5320df965a4820",
                            "city": {
                              "code": "b98f83032f6e8ca0c8f5a38bca1e3d75"
                            },
                            "province": {
                              "code": "751d31dd6b56b26b29dac2c0e1839e34",
                              "name": "24c53cacba758b4fee3bebc22d9a63d3"
                            },
                            "state": {
                              "code": "de40a6e304bf5a88b2ea9f4fb90c3a0c",
                              "inegiCode": "b5b41fac0361d157d9673ecb926af5ae"
                            },
                            "externalHouseNumber": "d3d9446802a44259755d38e6d163e820",
                            "internalHouseNumber": "b5b41fac0361d157d9673ecb926af5ae",
                            "houseNumber": "6512bd43d9caa6e02c990b0a82652dca",
                            "cardinalPoint": "NORTE",
                            "sector": "c085f5f4520170f210097480ab4ab414",
                            "block": "c085f5f4520170f210097480ab4ab414",
                            "stage": "6ef16950a64657f212c144bc668c5934",
                            "lot": "a87ff679a2f3e71d9181a67b7542122c",
                            "building": "e698b5edc0e267abc4dbc54457b6087a",
                            "entryPoint": "f045c7902bd388666d8859c9f9423868",
                            "isHousingUnit": true
                          }
                        ],
                        "partyReference": {
                          "referenceId": "4d696c8238971e7a68c8e5f6c340d1c0",
                          "referenceIdCoppel": "4d696c8238971e7a68c8e5f6c340d1c0",
                          "contactPoint": [
                            {
                              "contactPointType": "cellphone",
                              "contactPointValue": "24c53cacba758b4fee3bebc22d9a63d3",
                              "contactPointDetail": "85071",
                              "contactPointStatus": "status"
                            }
                          ]
                        },
                        "sequence": "236670474",
                        "user": "98681012",
                        "dateInsert": "04/22/2022",
                        "companyReference": "001",
                        "option": "A",
                        "operationType": "1"
                      }
                    }
                  }
                ]
              },
              "example": {
                "customerLocationReference": {
                  "location": [
                    {
                      "locationAddressType": "PARTY_ADDRESS",
                      "locationInegiCode": "98f13708210194c475687be6106a3b84",
                      "street": {
                        "streetNumber": "98f13708210194c475687be6106a3b84",
                        "streetName": "dbdf93dc6ae43db67c56ab8a226daa28"
                      },
                      "neighborhood": "4e1dccc679b3bbda511dd1e4f2864fd0",
                      "locationDescription": "837605ddb5847fe471dd3dd01fef9443",
                      "locationReferencePoint": "d41e0312b78db54d2e464dd97e54178a",
                      "locationObservations": "d41e0312b78db54d2e464dd97e54178a",
                      "neighborhoodNumber": "d3d9446802a44259755d38e6d163e820",
                      "cityNumber": 2,
                      "country": {
                        "code": "24c53cacba758b4fee3bebc22d9a63d3"
                      },
                      "countyDistrict": {
                        "code": "24c53cacba758b4fee3bebc22d9a63d3",
                        "name": "24c53cacba758b4fee3bebc22d9a63d3",
                        "inegiCode": "b5b41fac0361d157d9673ecb926af5ae"
                      },
                      "postalCode": "049d64bd087ad59d9e5320df965a4820",
                      "city": {
                        "code": "b98f83032f6e8ca0c8f5a38bca1e3d75"
                      },
                      "province": {
                        "code": "751d31dd6b56b26b29dac2c0e1839e34",
                        "name": "24c53cacba758b4fee3bebc22d9a63d3"
                      },
                      "state": {
                        "code": "de40a6e304bf5a88b2ea9f4fb90c3a0c",
                        "inegiCode": "b5b41fac0361d157d9673ecb926af5ae"
                      },
                      "externalHouseNumber": "d3d9446802a44259755d38e6d163e820",
                      "internalHouseNumber": "b5b41fac0361d157d9673ecb926af5ae",
                      "houseNumber": "6512bd43d9caa6e02c990b0a82652dca",
                      "cardinalPoint": "NORTE",
                      "sector": "c085f5f4520170f210097480ab4ab414",
                      "block": "c085f5f4520170f210097480ab4ab414",
                      "stage": "6ef16950a64657f212c144bc668c5934",
                      "lot": "a87ff679a2f3e71d9181a67b7542122c",
                      "building": "e698b5edc0e267abc4dbc54457b6087a",
                      "entryPoint": "f045c7902bd388666d8859c9f9423868",
                      "isHousingUnit": true
                    }
                  ],
                  "partyReference": {
                    "referenceId": "4d696c8238971e7a68c8e5f6c340d1c0",
                    "referenceIdCoppel": "4d696c8238971e7a68c8e5f6c340d1c0",
                    "contactPoint": [
                      {
                        "contactPointType": "cellphone",
                        "contactPointValue": "24c53cacba758b4fee3bebc22d9a63d3",
                        "contactPointDetail": "85071",
                        "contactPointStatus": "status"
                      }
                    ]
                  },
                  "sequence": "236670474",
                  "user": "98681012",
                  "dateInsert": "04/22/2022",
                  "companyReference": "001",
                  "option": "A",
                  "operationType": "1"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "400",
                        "status": "FAILED",
                        "message": "Bad Request"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "400",
                  "status": "FAILED",
                  "message": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "401",
                        "status": "FAILED",
                        "message": "Unauthorized"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "401",
                  "status": "FAILED",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "403",
                        "status": "FAILED",
                        "message": "Forbidden"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "403",
                  "status": "FAILED",
                  "message": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "404",
                        "status": "FAILED",
                        "message": "Not Found"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "404",
                  "status": "FAILED",
                  "message": "Not Found"
                }
              }
            }
          },
          "408": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "408",
                        "status": "FAILED",
                        "message": "Time Out"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "408",
                  "status": "FAILED",
                  "message": "Time Out"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "500",
                        "status": "FAILED",
                        "message": "Internal Server Error"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "500",
                  "status": "FAILED",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },

    "/v1/incomeProfile/initiate": {
      "post": {
        "tags": ["v1"],
        "summary": "V1IncomeProfileInitiate_POST",
        "description": "Servicio de dominio para el registro de la fuente de ingresos y tipo de residencia del cliente en el proceso de Alta de un Cliente Nuevo (Alta Única).",
        "operationId": "V1IncomeProfileInitiate_POST",
        "parameters": [
          {
            "name": "consumerRequestId",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Example"
            }
          },
          {
            "name": "token",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Example"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/initiateIncomeProfileRq"
                  },
                  {
                    "example": {
                      "companyReference": "001",
                      "option": "A",
                      "partyReference": {
                        "referenceId": "IFNlZ3VyaWRh",
                        "economicActivityIdentification": "U2VydmljaW9zIGRlIFNlZ3VyaWRhZCBQdWJsaWNhIChNdW5pY2lwYWwp",
                        "economicSubActivityIdentification": "U2VydmljaW9zIGRlIFNlZ3VyaWRhZCBQdWJsaWNhIChNdW5pY2lwYWwp",
                        "housingType": "c4ca4238a0b923820dcc509a6f75849b",
                        "employeeNumber": "c4ca4238a0b923820dcc509a6f75849b",
                        "personProfile": {
                          "pepProfile": {
                            "role": "B277B9D408D34013A4BE9FA416B72638"
                          }
                        }
                      },
                      "incomeProfile": {
                        "sequence": 13,
                        "organisation": {
                          "organisationName": "Grupo F123"
                        },
                        "jobTitle": {
                          "name": "0",
                          "code": "12"
                        },
                        "otherIncome": [
                          {
                            "incomeType": 1
                          }
                        ],
                        "lengthOfService": 2,
                        "workUnit": "Unidad 1",
                        "supervisor": "Juan Perez",
                        "salaryAmount": "464E07AFC9E46359FB480839150595C5",
                        "salaryFrequency": 5,
                        "governmentIdentification": 6,
                        "workforceSize": "50"
                      }
                    }
                  }
                ]
              },
              "example": {
                "companyReference": "001",
                "option": "A",
                "partyReference": {
                  "referenceId": "IFNlZ3VyaWRh",
                  "economicActivityIdentification": "U2VydmljaW9zIGRlIFNlZ3VyaWRhZCBQdWJsaWNhIChNdW5pY2lwYWwp",
                  "economicSubActivityIdentification": "U2VydmljaW9zIGRlIFNlZ3VyaWRhZCBQdWJsaWNhIChNdW5pY2lwYWwp",
                  "housingType": "c4ca4238a0b923820dcc509a6f75849b",
                  "employeeNumber": "c4ca4238a0b923820dcc509a6f75849b",
                  "personProfile": {
                    "pepProfile": {
                      "role": "B277B9D408D34013A4BE9FA416B72638"
                    }
                  }
                },
                "incomeProfile": {
                  "sequence": 13,
                  "organisation": {
                    "organisationName": "Grupo F123"
                  },
                  "jobTitle": {
                    "name": "0",
                    "code": "12"
                  },
                  "otherIncome": [
                    {
                      "incomeType": 1
                    }
                  ],
                  "lengthOfService": 2,
                  "workUnit": "Unidad 1",
                  "supervisor": "Juan Perez",
                  "salaryAmount": "464E07AFC9E46359FB480839150595C5",
                  "salaryFrequency": 5,
                  "governmentIdentification": 6,
                  "workforceSize": "50"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {},
            "content": {}
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "400",
                        "status": "FAILED",
                        "message": "Bad Request"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "400",
                  "status": "FAILED",
                  "message": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "401",
                        "status": "FAILED",
                        "message": "Unauthorized"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "401",
                  "status": "FAILED",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "403",
                        "status": "FAILED",
                        "message": "Forbidden"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "403",
                  "status": "FAILED",
                  "message": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "404",
                        "status": "FAILED",
                        "message": "Not Found"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "404",
                  "status": "FAILED",
                  "message": "Not Found"
                }
              }
            }
          },
          "408": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "408",
                        "status": "FAILED",
                        "message": "Time Out"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "408",
                  "status": "FAILED",
                  "message": "Time Out"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": {
                        "statusCode": "500",
                        "status": "FAILED",
                        "message": "Internal Server Error"
                      }
                    }
                  ]
                },
                "example": {
                  "statusCode": "500",
                  "status": "FAILED",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
        "/v1/customerIdentity/retrieve": {
      "post": {
        "tags": [
          "v1"
        ],
        "summary": "V1CustomerIdentityRetrieve_POST",
        "description": "Este microservicio es el encargado de validar el CURP mediante la integración con el servicio proporcionado por RENAPO (Incode). Con la finalidad de asegurar la veracidad de la información proporcionada por el usuario (datos personales) y realizando un guardado de la información en Yugabite.",
        "operationId": "V1CustomerIdentityRetrieve_POST",
        "parameters": [
          {
            "name": "consumerRequestId",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Example"
            }
          },
          {
            "name": "token",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Example"
            }
          },
          {
            "name": "identity-session-token",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Example"
            }
          },
          {
            "name": "sessionId",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "Example"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/retrieveCustomerIdentityRq"
                  },
                  {
                    "example": 
                    {
                      "sessionDialogueIdentification": "68bef9572cc52d1758feb1f5",
                      "typeTransaction": "INCODE",
                      "renapo": {
                        "partyReference": {
                          "identificationDevice": {
                            "curp": "1524e398r4456ew354"
                          },
                          "personName": {
                            "familyName": "15276e7fd43ab63d6b0a6a3bc03f313f",
                            "secondLastName": "07232a5d792f96d44ac593e43d6592c3",
                            "firstName": "1276c190f7197fd82d7f0ad19c1c93d2"
                          },
                          "dateOfBirth": "f5c4aa0648d87d54176a1e77000b6be8",
                          "gender": "69691c7bdcc3ce6d5d8a1361f22d04ac",
                          "location": [
                            {
                              "state": {
                                "code": "b98f83032f6e8ca0c8f5a38bca1e3d75"
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                ]
              },
              "example":
              {
                "sessionDialogueIdentification": "68bef9572cc52d1758feb1f5",
                "typeTransaction": "INCODE",
                "renapo": {
                  "partyReference": {
                    "identificationDevice": {
                      "curp": "1524e398r4456ew354"
                    },
                    "personName": {
                      "familyName": "15276e7fd43ab63d6b0a6a3bc03f313f",
                      "secondLastName": "07232a5d792f96d44ac593e43d6592c3",
                      "firstName": "1276c190f7197fd82d7f0ad19c1c93d2"
                    },
                    "dateOfBirth": "f5c4aa0648d87d54176a1e77000b6be8",
                    "gender": "69691c7bdcc3ce6d5d8a1361f22d04ac",
                    "location": [
                      {
                        "state": {
                          "code": "b98f83032f6e8ca0c8f5a38bca1e3d75"
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/retrieveCustomerIdentityRs"
                    },
                    {
                      "example": 
                      {
                        "renapo": {
                          "partyReference": {
                            "location": [
                              {
                                "city": {
                                  "code": "dbdf93dc6ae43db67c56ab8a226daa28"
                                },
                                "locationAddressType": "BIRTH_PLACE"
                              }
                            ],
                            "identificationDevice": {
                              "curp": "DUEBN848027D48027D",
                              "statusCurp": "validado",
                              "sesionStatus": "VALID",
                              "personName": {
                                "familyName": "B277B9D408D34013A4BE9FA416B72638",
                                "secondLastName": "B277B9D408D34013A4BE9FA416B72638",
                                "firstName": "B277B9D408D34013A4BE9FA416B72638"
                              },
                              "dateOfBirth": "B277B9D408D34013A4BE9FA416B72638",
                              "nationality": "B277B9D408D34013A4BE9FA416B72638",
                              "gender": "Hombre",
                              "supportingDocument": [
                                {
                                  "identificationSupportingDocument": "1",
                                  "documentPage": "1",
                                  "documentVolume": "2",
                                  "documentBook": "1",
                                  "legalDocumentRecordNumber": "04175",
                                  "crip": "334455",
                                  "folioNumber": "12",
                                  "foreignersRegistryNumber": "23",
                                  "issueDate": 1986,
                                  "countyDistrictRegister": {
                                    "code": "B277B9D408D34013A4BE9FA416B72638"
                                  },
                                  "stateRegister": {
                                    "code": "B277B9D408D34013A4BE9FA416B72638"
                                  },
                                  "emisionState": {
                                    "code": "B277B9D408D34013A4BE9FA416B72638"
                                  },
                                  "state": {
                                    "code": "B277B9D408D34013A4BE9FA416B72638"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "statusEvaluateCurp": true
                      }
                    }
                  ]
                },
                "example":
                {
                  "renapo": {
                    "partyReference": {
                      "location": [
                        {
                          "city": {
                            "code": "dbdf93dc6ae43db67c56ab8a226daa28"
                          },
                          "locationAddressType": "BIRTH_PLACE"
                        }
                      ],
                      "identificationDevice": {
                        "curp": "DUEBN848027D48027D",
                        "statusCurp": "validado",
                        "sesionStatus": "VALID",
                        "personName": {
                          "familyName": "B277B9D408D34013A4BE9FA416B72638",
                          "secondLastName": "B277B9D408D34013A4BE9FA416B72638",
                          "firstName": "B277B9D408D34013A4BE9FA416B72638"
                        },
                        "dateOfBirth": "B277B9D408D34013A4BE9FA416B72638",
                        "nationality": "B277B9D408D34013A4BE9FA416B72638",
                        "gender": "Hombre",
                        "supportingDocument": [
                          {
                            "identificationSupportingDocument": "1",
                            "documentPage": "1",
                            "documentVolume": "2",
                            "documentBook": "1",
                            "legalDocumentRecordNumber": "04175",
                            "crip": "334455",
                            "folioNumber": "12",
                            "foreignersRegistryNumber": "23",
                            "issueDate": 1986,
                            "countyDistrictRegister": {
                              "code": "B277B9D408D34013A4BE9FA416B72638"
                            },
                            "stateRegister": {
                              "code": "B277B9D408D34013A4BE9FA416B72638"
                            },
                            "emisionState": {
                              "code": "B277B9D408D34013A4BE9FA416B72638"
                            },
                            "state": {
                              "code": "B277B9D408D34013A4BE9FA416B72638"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "statusEvaluateCurp": true
                }
              }
            }
          },
          "400": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": 
                      {
                        "statusCode": "400",
                        "status": "FAILED",
                        "message": "Bad Request"
                      }
                    }
                  ]
                },
                "example":
                {
                  "statusCode": "400",
                  "status": "FAILED",
                  "message": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": 
                      {
                        "statusCode": "401",
                        "status": "FAILED",
                        "message": "Unauthorized"
                      }
                    }
                  ]
                },
                "example":
                {
                  "statusCode": "401",
                  "status": "FAILED",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": 
                      {
                        "statusCode": "403",
                        "status": "FAILED",
                        "message": "Forbidden"
                      }
                    }
                  ]
                },
                "example":
                {
                  "statusCode": "403",
                  "status": "FAILED",
                  "message": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": 
                      {
                        "statusCode": "404",
                        "status": "FAILED",
                        "message": "Not Found"
                      }
                    }
                  ]
                },
                "example":
                {
                  "statusCode": "404",
                  "status": "FAILED",
                  "message": "Not Found"
                }
              }
            }
          },
          "408": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": 
                      {
                        "statusCode": "408",
                        "status": "FAILED",
                        "message": "Time Out"
                      }
                    }
                  ]
                },
                "example":
                {
                  "statusCode": "408",
                  "status": "FAILED",
                  "message": "Time Out"
                }
              }
            }
          },
          "500": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/commonErrorRs"
                    },
                    {
                      "example": 
                      {
                        "statusCode": "500",
                        "status": "FAILED",
                        "message": "Internal Server Error"
                      }
                    }
                  ]
                },
                "example":
                {
                  "statusCode": "500",
                  "status": "FAILED",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    }
    
  },
  "components": {
    "schemas": {
      "commonErrorRs": {
        "title": "commonErrorRs",
        "required": ["statusCode", "message", "status"],
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "string",
            "description": "Codigo de respuesta interno",
            "example": "Example"
          },
          "message": {
            "type": "string",
            "description": "Mensaje de resultado",
            "example": "Example"
          },
          "status": {
            "type": "string",
            "description": "Estado de la peticion",
            "example": "Example"
          }
        }
      },
      "evaluateOnBoardingPartySuitabilityRq": {
        "title": "evaluateOnBoardingPartySuitabilityRq",
        "type": "object",
        "properties": {
          "sessionDialogueIdentification": {
            "type": "string",
            "description": "Identifica la sesión de incorporación que se inicializa. Se puede usar para obtener datos sobre esa sesión en llamadas futuras."
          }
        }
      },
      "evaluateCustomerAccountRq": {
        "title": "evaluateCustomerAccountRq",
        "type": "object",
        "properties": {
          "partyReference": {
            "$ref": "#/components/schemas/partyReference"
          }
        }
      },
      "registerPartyReferenceDataDirectoryRq": {
        "title": "registerPartyReferenceDataDirectoryRq",
        "type": "object",
        "properties": {
          "partyReferenceDataDirectoryEntry": {
            "type": "object",
            "properties": {
              "partyReference": {
                "$ref": "#/components/schemas/partyReference"
              }
            }
          }
        }
      },
      "retrievePaymentBalancesFacilityRq": {
        "title": "retrievePaymentBalancesFacilityRq",
        "type": "object",
        "properties": {
          "paymentBalancesFacility": {
            "$ref": "#/components/schemas/paymentBalancesFacility"
          }
        }
      },
      "executeOnBoardingPartyRq": {
        "title": "executeOnBoardingPartyRq",
        "type": "object",
        "properties": {
          "sessionDialogueIdentification": {
            "type": "string",
            "description": "Identifica la sesión de incorporación que se inicializa. Se puede usar para obtener datos sobre esa sesión en llamadas futuras."
          }
        }
      },
      "retrieveCustomerRq": {
        "title": "retrieveCustomerRq",
        "type": "object",
        "properties": {
          "partyReference": {
            "$ref": "#/components/schemas/partyReference"
          },
          "paymentCard": {
            "$ref": "#/components/schemas/paymentCard"
          },
          "accountIdentification": {
            "$ref": "#/components/schemas/accountIdentification"
          },
          "channelFacility": {
            "$ref": "#/components/schemas/channelFacility"
          },
          "companyReference": {
            "type": "string",
            "description": "Empresa o institución financiera supervisando la autenticación biométrica."
          },
          "option": {
            "type": "number",
            "description": "Opcion de  busqueda"
          }
        }
      },
      "retrieveCustomerCardRq": {
        "title": "retrieveCustomerCardRq",
        "type": "object",
        "properties": {
          "accountIdentification": {
            "$ref": "#/components/schemas/accountIdentification"
          },
          "companyReference": {
            "type": "string",
            "description": "Empresa o institución financiera supervisando la autenticación biométrica."
          }
        }
      },
      "retrieveLifeInsuranceRq": {
        "title": "retrieveLifeInsuranceRq",
        "type": "object",
        "properties": {
          "partyReference": {
            "$ref": "#/components/schemas/partyReference"
          },
          "creditCardFacility": {
            "$ref": "#/components/schemas/creditCardFacility"
          },
          "paymentCard": {
            "$ref": "#/components/schemas/paymentCard"
          },
          "accountIdentification": {
            "$ref": "#/components/schemas/accountIdentification"
          }
        }
      },
      "initiateCustomerRelationshipInvolvementRq": {
        "title": "initiateCustomerRelationshipInvolvementRq",
        "type": "object",
        "properties": {
          "option": {
            "type": "string",
            "description": "Opcion"
          },
          "sourceChannel": {
            "type": "string",
            "description": "sourceChannel"
          },
          "applicationReferenceId": {
            "type": "string",
            "description": "Número de solicitud"
          },
          "customerRelationshipInvolvement": {
            "$ref": "#/components/schemas/customerRelationshipInvolvement"
          },
          "partyReference": {
            "$ref": "#/components/schemas/partyReference"
          }
        }
      },
      "registerCustomerLocationReferenceRq": {
        "title": "registerCustomerLocationReferenceRq",
        "type": "object",
        "properties": {
          "customerLocationReference": {
            "type": "object",
            "properties": {
              "partyReference": {
                "$ref": "#/components/schemas/partyReference"
              },
              "location": {
                "$ref": "#/components/schemas/location"
              },
              "sequence": {
                "type": "string",
                "description": "Sequencia generada"
              },
              "user": {
                "type": "string",
                "description": "Identificador del usuario en el sistema"
              },
              "dateInsert": {
                "type": "string",
                "description": "Fecha de la inserción o actualización de los datos de la referencia."
              },
              "companyReference": {
                "type": "string",
                "description": "Codigo de la empresa"
              },
              "option": {
                "type": "string",
                "description": "Caracter que indica el tipo de operacion a realizar"
              },
              "operationType": {
                "type": "string",
                "description": "Valor que determina el tipo de accion a realizar"
              }
            }
          }
        }
      },
      "initiateIncomeProfileRq": {
        "title": "initiateIncomeProfileRq",
        "type": "object",
        "properties": {
          "companyReference": {
            "type": "string",
            "description": "Referencia de empresa"
          },
          "option": {
            "type": "string",
            "description": "Opción"
          },
          "partyReference": {
            "$ref": "#/components/schemas/partyReference"
          },
          "incomeProfile": {
            "$ref": "#/components/schemas/incomeProfile"
          }
        }
      },
      "retrieveCustomerIdentityRq": {
        "title": "retrieveCustomerIdentityRq",
        "type": "object",
        "properties": {
          "sessionDialogueIdentification": {
            "type": "string",
            "description": "Identifica la sesión de incorporación que se inicializa. Se puede usar para obtener datos sobre esa sesión en llamadas futuras."
          },
          "typeTransaction": {
            "type": "string",
            "description": "Tipo de transacción, la consulta se realiza mediante uno de los servicio que pueden ser INCODE, LEGACY"
          },
          "renapo": {
            "$ref": "#/components/schemas/renapo"
          }
        }
      },
      "retrieveOcrDocumentRs": {
        "title": "retrieveOcrDocumentRs",
        "type": "object",
        "properties": {
          "documentation": {
            "$ref": "#/components/schemas/documentation"
          }
        }
      },
      "evaluateOnBoardingPartySuitabilityRs": {
        "title": "evaluateOnBoardingPartySuitabilityRs",
        "type": "object",
        "properties": {
          "qualification": {
            "$ref": "#/components/schemas/qualification"
          }
        }
      },
      "evaluateCustomerAccountRs": {
        "title": "evaluateCustomerAccountRs",
        "type": "object",
        "properties": {
          "partyRelationshipProcedure": {
            "$ref": "#/components/schemas/partyRelationshipProcedure"
          },
          "customerCreditRatingState": {
            "$ref": "#/components/schemas/customerCreditRatingState"
          }
        }
      },
      "registerPartyReferenceDataDirectoryRs": {
        "title": "registerPartyReferenceDataDirectoryRs",
        "type": "object",
        "properties": {
          "partyReferenceDataDirectoryEntry": {
            "type": "object",
            "properties": {
              "partyReference": {
                "$ref": "#/components/schemas/partyReference"
              }
            }
          }
        }
      },
      "retrievePaymentBalancesFacilityRs": {
        "title": "retrievePaymentBalancesFacilityRs",
        "type": "object",
        "properties": {
          "paymentBalancesFacility": {
            "$ref": "#/components/schemas/paymentBalancesFacility"
          }
        }
      },
      "executeOnBoardingPartyRs": {
        "title": "executeOnBoardingPartyRs",
        "type": "object",
        "properties": {
          "partyReference": {
            "$ref": "#/components/schemas/partyReference"
          }
        }
      },
      "retrieveCustomerRs": {
        "title": "retrieveCustomerRs",
        "type": "object",
        "properties": {
          "partyReferenceDataDirectoryEntryCollection": {
            "$ref": "#/components/schemas/partyReferenceDataDirectoryEntryCollection"
          },
          "accountIdentification": {
            "$ref": "#/components/schemas/accountIdentification"
          }
        }
      },
      "retrieveCustomerCardRs": {
        "title": "retrieveCustomerCardRs",
        "type": "object",
        "properties": {
          "partyReference": {
            "$ref": "#/components/schemas/partyReference"
          },
          "paymentCard": {
            "$ref": "#/components/schemas/paymentCard"
          }
        }
      },
      "retrieveLifeInsuranceRs": {
        "title": "retrieveLifeInsuranceRs",
        "type": "object",
        "properties": {
          "lifeInsurance": {
            "$ref": "#/components/schemas/lifeInsurance"
          }
        }
      },
      "retrieveCustomerIdentityRs": {
        "title": "retrieveCustomerIdentityRs",
        "type": "object",
        "properties": {
          "renapo": {
            "$ref": "#/components/schemas/renapo"
          },
          "statusEvaluateCurp": {
            "type": "boolean"
          }
        }
      },
      "account": {
        "title": "account",
        "type": "object",
        "properties": {
          "accountIdentification": {
            "$ref": "#/components/schemas/accountIdentification"
          },
          "accountBalance": {
            "$ref": "#/components/schemas/accountBalance"
          }
        }
      },
      "accountBalance": {
        "title": "accountBalance",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "accountBalance": {
              "type": "number",
              "description": "Indica el monto total de la capacidad del prestamo"
            },
            "accountBalanceType": {
              "type": "string",
              "enum": [
                "openingBalance",
                "closingBalance",
                "currentBalance",
                "availableBalance",
                "reserveBalance",
                "freeBalance",
                "principalBalance"
              ],
              "description": "Tipo de Saldo * openingBalance = Saldo de apertura del producto* closingBalance = Saldo de cierre del producto * currentBalance = Saldo actual del producto * availableBalance = Saldo disponible del producto* reserveBalance = Saldo reservado del producto * freeBalance = Saldo disponible del producto * principalBalance = Saldo de principal del producto"
            },
            "accountBalanceDate": {
              "type": "string",
              "description": "Indica la fecha y hora del balance"
            }
          }
        }
      },
      "accountIdentification": {
        "title": "accountIdentification",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "identifierValue": {
              "type": "string",
              "description": "Indica el número de cuenta"
            },
            "accountIdentificationType": {
              "type": "string",
              "enum": ["Account Number", "Clabe", "IBAN"],
              "description": "Indica el tipo de identificacion de la cuenta * Account Number = Tipo de identificacion de numero de cuenta * Clabe = Tipo de identificacion de numero Clabe * IBAN = Tipo de identificacion de numero IBAN\n"
            }
          }
        }
      },
      "activitySector": {
        "title": "activitySector",
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Descripción del sector de actividad."
          },
          "code": {
            "type": "string",
            "description": "Código del sector de actividad."
          }
        }
      },
      "bankBranch": {
        "title": "bankBranch",
        "type": "object",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/location"
          },
          "branchReference": {
            "type": "string",
            "description": "Referencia de la Sucursal"
          },
          "name": {
            "type": "string",
            "description": "Nombre de la Sucursal"
          }
        }
      },
      "birthPlace": {
        "title": "birthPlace",
        "type": "object",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/location"
          }
        }
      },
      "channelFacility": {
        "title": "channelFacility",
        "type": "object",
        "properties": {
          "channelReferenceId": {
            "type": "string",
            "description": "identificador de canal a consumir informix o bpc"
          },
          "description": {
            "type": "string",
            "description": "informacion adicional que describe el canal"
          }
        }
      },
      "cityReference": {
        "title": "cityReference",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Código de la ciudad"
          },
          "name": {
            "type": "string",
            "description": "Indica el nombre de la ciudad, normalmente que pertenece a una dirección"
          }
        }
      },
      "commission": {
        "title": "commission",
        "type": "object",
        "properties": {
          "creationCommissionAmount": {
            "type": "number",
            "description": "Creación de la comisión de la cantidad"
          },
          "creationCommissionCode": {
            "type": "string",
            "description": "Creación de la comisión del código"
          },
          "annualCommissionAmount": {
            "type": "number",
            "description": "Cantidad de la comisión anúal"
          },
          "annualCommissionCode": {
            "type": "string",
            "description": "Código de la cantidad de la comisión"
          },
          "annualCommissionCodeAdditional": {
            "type": "string",
            "description": "Código adicional de la cantidad de la comisión"
          },
          "additionalRateAmount": {
            "type": "number",
            "description": "Importe de tasa adicional"
          }
        }
      },
      "confidence": {
        "title": "confidence",
        "type": "object",
        "description": "Objeto que almacena los niveles de confianza de los datos obtenidos en el proceso del OCR",
        "properties": {
          "addressOcrConfidence": {
            "type": "number",
            "description": "Nivel de confianza address"
          },
          "streetOcrConfidence": {
            "type": "number",
            "description": "Nivel de confianza street"
          },
          "neighborhoodOcrConfidence": {
            "type": "number",
            "description": "Nivel de confianza colony"
          },
          "postalCodeOcrConfidence": {
            "type": "number",
            "description": "Nivel de confianza postalCode"
          },
          "cityOcrConfidence": {
            "type": "number",
            "description": "Nivel de confianza city"
          },
          "stateOcrConfidence": {
            "type": "number",
            "description": "Nivel de confianza state"
          }
        }
      },
      "contactPoint": {
        "title": "contactPoint",
        "type": "array",
        "description": "Medio utilizado para la comunicación.",
        "items": {
          "type": "object",
          "properties": {
            "contactPointValue": {
              "type": "string",
              "description": "Número telefónico"
            },
            "contactPointType": {
              "type": "string",
              "enum": [
                "cellphone",
                "Electronic Address",
                "phone Number",
                "work Phone Number",
                "other Phone Number",
                "postalCode"
              ],
              "description": "Indica el tipo de punto de contacto * cellphone = numero celular * Electronic Address = email * work Phone Number = telefono de trabajo * other Phone Number = otro telefono * phone Number = telefono residencial"
            },
            "contactPointDetail": {
              "type": "string",
              "description": "Detalles sobre el número telefónico ingresado"
            },
            "contactPointStatus": {
              "type": "string",
              "description": "Indica proceso válido para el numero telefónico"
            },
            "contactPointProviderName": {
              "type": "string",
              "description": "Nombre del proovedor de servicio del punto de contacto"
            },
            "contactPointActiveStatus": {
              "type": "boolean",
              "description": "Indica el envio exitoso"
            },
            "registrationDate": {
              "type": "string",
              "description": "Fecha de insercion"
            }
          }
        }
      },
      "content": {
        "title": "content",
        "type": "object",
        "properties": {
          "base64Image": {
            "type": "string",
            "description": "Formato base 64 que representa una imagen."
          },
          "classification": {
            "type": "boolean",
            "description": "Indica si se realizó alguna clasificación sobre la imágen."
          },
          "readability": {
            "type": "boolean",
            "description": "Indica si la imágen es leíble por el servidor."
          },
          "sharpness": {
            "type": "number",
            "description": "Indica la nitidez de la imágen."
          },
          "correctSharpness": {
            "type": "boolean",
            "description": "Indica si el sharpness es correcto."
          },
          "glare": {
            "type": "number",
            "description": "Indica la cantidad de reflejo en una imágen."
          },
          "correctGlare": {
            "type": "boolean",
            "description": "Indica si el glare es correcto."
          },
          "horizontalResolution": {
            "type": "number",
            "description": "El valor se basa en la resolución de la foto recortada. Un valor bajo significa que después de realizar el recorte tenemos una mala calidad de imagen. Recomendamos volver a intentar la captura si el valor es inferior a 155."
          },
          "typeOfId": {
            "type": "string",
            "description": "Clasificación de la imágen"
          },
          "issueDate": {
            "type": "number",
            "description": "Año de emisión de la identificación"
          },
          "location": {
            "$ref": "#/components/schemas/location"
          },
          "issueName": {
            "type": "string",
            "description": "Descripción de la identificación. Podría contener código de país, estado, tipo de identificación, subtipo de identificación."
          },
          "curpCheck": {
            "type": "boolean",
            "description": "Solo para cédulas mexicanas. Indicador que indica si curp se leyó correctamente."
          },
          "documentStatus": {
            "type": "string",
            "description": "Estado del contenido * Alive = contenido activo * Closed = comtenido cerrado * Deleted = contenido eliminado",
            "enum": ["Alive", "Closed", "Deleted"]
          },
          "failReason": {
            "type": "string",
            "description": "Razón del error de clasificación. * UNKNOWN_DOCUMENT_TYPE = tipo de documento desconocido * WRONG_DOCUMENT_SIDE = lado incorrecto del documento * WRONG_ONE_SIDED_DOCUMENT = Documento de una lado incorrecto* DOCUMENT_NOT_READABLE = Documento no se puede leer * UNABLE_TO_ALIGN_DOCUMENT = Documento no alineado * ID_TYPE_UNACCEPTABLE = Documento invalido * UNEXPECTED_ERROR_OCCURRED = Error inesperado",
            "enum": [
              "UNKNOWN_DOCUMENT_TYPE",
              "WRONG_DOCUMENT_SIDE",
              "WRONG_ONE_SIDED_DOCUMENT",
              "DOCUMENT_NOT_READABLE",
              "UNABLE_TO_ALIGN_DOCUMENT",
              "ID_TYPE_UNACCEPTABLE",
              "UNEXPECTED_ERROR_OCCURRED"
            ]
          }
        }
      },
      "countryReference": {
        "title": "countryReference",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Código ISO alfa-2 o alfa-3 válido del país.",
            "default": "All"
          },
          "name": {
            "type": "string",
            "description": "Nombre del País"
          }
        }
      },
      "countyDistrict": {
        "title": "countyDistrict",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nombre del distrito"
          },
          "code": {
            "type": "string",
            "description": "Código del distrito"
          },
          "inegiCode": {
            "type": "string",
            "description": "Nombre del municipio con respecto al Inegi"
          }
        }
      },
      "creditCardFacility": {
        "title": "creditCardFacility",
        "type": "object",
        "properties": {
          "creditPlan": {
            "$ref": "#/components/schemas/creditPlan"
          },
          "monthlyIncome": {
            "type": "number",
            "description": "Ingreso mensual"
          },
          "minimumIncomeGold": {
            "type": "number",
            "description": "Ingreso minimo oro"
          },
          "scoring": {
            "type": "string",
            "description": "Calificación crediticia"
          },
          "requestType": {
            "type": "string",
            "description": "Tipo de solicitud"
          },
          "group": {
            "type": "string",
            "description": "Grupo"
          },
          "partyReference": {
            "$ref": "#/components/schemas/partyReference"
          },
          "productInstanceRecord": {
            "$ref": "#/components/schemas/productInstanceRecord"
          },
          "evaluateCC": {
            "type": "string",
            "description": "Evaluate cc"
          },
          "account": {
            "$ref": "#/components/schemas/account"
          },
          "requestedAmount": {
            "type": "number",
            "description": "Monto requerido"
          },
          "companyReference": {
            "type": "string",
            "description": "Referencia de la compañia"
          },
          "bankBranch": {
            "$ref": "#/components/schemas/bankBranch"
          },
          "productInstanceReference": {
            "type": "string",
            "description": "Indica el identificador del producto"
          },
          "user": {
            "type": "string",
            "description": "Nombre de usuario"
          },
          "commission": {
            "$ref": "#/components/schemas/commission"
          }
        }
      },
      "creditPlan": {
        "title": "creditPlan",
        "type": "object",
        "properties": {
          "creditPlanMinimumAmount": {
            "type": "number",
            "description": "Cantidad mínima del plan de crédito"
          },
          "creditPlanMaximumAmount": {
            "type": "number",
            "description": "Cantidad máxima del plan de crédito"
          },
          "creditPlanReference": {
            "type": "string",
            "description": "Referencia del plan de crédito"
          },
          "creditPlanName": {
            "type": "string",
            "description": "Nombre del plan de crédito"
          },
          "creditPlanType": {
            "type": "string",
            "description": "Tipo del plan de crédito"
          },
          "creditPlanLimit": {
            "type": "number",
            "description": "Limite del plan de crédito"
          }
        }
      },
      "customerContactVideoSelfieProcedure": {
        "title": "customerContactVideoSelfieProcedure",
        "type": "object",
        "properties": {
          "documentContent": {
            "$ref": "#/components/schemas/documentContent"
          },
          "selfieDialogueRecord": {
            "$ref": "#/components/schemas/selfieDialogueRecord"
          }
        }
      },
      "customerCreditRatingState": {
        "title": "customerCreditRatingState",
        "type": "object",
        "properties": {
          "customerReference": {
            "type": "string",
            "description": "Identificador único del cliente."
          },
          "customerCreditRatingStatusType": {
            "type": "string",
            "description": "Tipo de estado de la calificación crediticia del cliente."
          },
          "customerCreditRatingSchedule": {
            "type": "string",
            "description": "Agenda o programación de la calificación de crédito."
          },
          "customerCreditRatingAssessmentRecord": {
            "type": "string",
            "description": "Registro detallado de la evaluación crediticia del cliente."
          },
          "assessmentCustomerBehaviorModelReference": {
            "type": "string",
            "description": "Referencia al modelo de comportamiento del cliente utilizado para la evaluación."
          },
          "creditRatingAssessmentType": {
            "type": "string",
            "description": "Tipo de evaluación de calificación crediticia realizada."
          },
          "creditRatingAssessmentDate": {
            "$ref": "#/components/schemas/dateContent"
          },
          "creditRatingBlackListType": {
            "type": "string",
            "description": "Tipo de lista negra de calificación crediticia, si aplica."
          },
          "creditRatingAssessmentWorkProducts": {
            "type": "string",
            "description": "Productos de trabajo resultantes de la evaluación de calificación crediticia."
          },
          "creditRatingAssessmentResult": {
            "type": "string",
            "description": "Resultado final de la evaluación de calificación crediticia."
          },
          "customerCreditRatingRecord": {
            "type": "string",
            "description": "Registro histórico de calificaciones crediticias del cliente."
          },
          "customerCreditRatingNarrative": {
            "type": "string",
            "description": "Descripción o narrativa detallada relacionada con la calificación crediticia del cliente."
          },
          "customerCreditRatingDate": {
            "$ref": "#/components/schemas/dateContent"
          }
        }
      },
      "customerRelationshipInvolvement": {
        "title": "customerRelationshipInvolvement",
        "type": "object",
        "properties": {
          "partyReference": {
            "$ref": "#/components/schemas/partyReference"
          },
          "customerRelationshipInvolvementType": {
            "type": "string",
            "description": "Tipo de Rol A - PEP B - CONYUGE C - REFERENCIA"
          },
          "partyRelationshipType": {
            "type": "string",
            "description": "Parentesco acotado a 1 posición que puede contener los siguientes valores: A - ABUELO (A) B - SOBRINO (A) C - CUÑADO (A) E - ESPOSO(A) / CÓNYUGE H - HERMANO (A) I - AMIGO(A)/CONOCIDO(A) J - HIJO (A) N - NIETO (A) P - PADRE / MADRE R - PRIMO(A) T - TIO (A) U - SUEGRO (A)"
          },
          "dateTime": {
            "type": "string",
            "description": "Fecha de validación"
          },
          "sequence": {
            "type": "number",
            "description": "Secuencia del mensaje a mostrar"
          }
        }
      },
      "dateContent": {
        "title": "dateContent",
        "type": "object",
        "properties": {
          "dateContent": {
            "type": "string",
            "description": "Contenido de la fecha."
          }
        }
      },
      "documentation": {
        "title": "documentation",
        "type": "object",
        "properties": {
          "documentContent": {
            "$ref": "#/components/schemas/documentContent"
          },
          "partyReference": {
            "$ref": "#/components/schemas/partyReference"
          },
          "manualCheckNeeded": {
            "type": "boolean",
            "description": "Indica que se necesita una verificación manual para validar la identificación."
          },
          "manualSelfieCheckNeeded": {
            "type": "boolean",
            "default": false,
            "description": "Si se establece en verdadero, indica que se necesita una verificación manual para validar la imagen selfie."
          }
        }
      },
      "documentContent": {
        "title": "documentContent",
        "type": "object",
        "properties": {
          "ocrData": {
            "$ref": "#/components/schemas/ocrData"
          },
          "page": {
            "$ref": "#/components/schemas/page"
          }
        }
      },
      "economicActivity": {
        "title": "economicActivity",
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Descripción de la actividad económica."
          },
          "code": {
            "type": "string",
            "description": "Código de la actividad económica."
          },
          "economicSubActivity": {
            "type": "string",
            "description": "Codigo de la sub actividad económica."
          }
        }
      },
      "group": {
        "title": "group",
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Descripción del grupo."
          },
          "code": {
            "type": "string",
            "description": "Código del grupo."
          }
        }
      },
      "identificationDevice": {
        "title": "identificationDevice",
        "type": "object",
        "properties": {
          "dateOfBirth": {
            "type": "string",
            "description": "Fecha de nacimiento formato timestamp"
          },
          "gender": {
            "type": "string",
            "description": "El género de la persona obtenido de ocr * M = Masculino* F = Femenino"
          },
          "voterKey": {
            "type": "string",
            "description": "Clave de elector como se lee de id. Solo para identificaciones mexicanas."
          },
          "curp": {
            "type": "string",
            "description": "ID de formulario de lectura. Solo para identificaciones mexicanas.",
            "minLength": 18,
            "maxLength": 18
          },
          "ocr": {
            "type": "string",
            "description": "Este campo se lee desde el reverso de la identificación; solo para identificaciones mexicanas"
          },
          "cic": {
            "type": "string",
            "description": "Este campo se lee desde el reverso de la identificación; solo para identificaciones mexicanas"
          },
          "emissionNumber": {
            "type": "string",
            "description": "Número de emisión."
          },
          "expireAt": {
            "type": "string",
            "description": "Fecha de caducidad."
          },
          "expirationDate": {
            "type": "string",
            "description": "Año de vencimiento de la identificación."
          },
          "issueDate": {
            "type": "number",
            "description": "Año de emisión de la identificación."
          },
          "machineReadZone": {
            "$ref": "#/components/schemas/machineReadZone"
          },
          "personName": {
            "$ref": "#/components/schemas/personName"
          },
          "registrationDate": {
            "type": "string",
            "description": "Fecha de registro"
          },
          "dateOfBirthCheckDigit": {
            "type": "string",
            "description": "Dígito de verificación de fecha de nacimiento leído de MRZ."
          },
          "documentNumberCheckDigit": {
            "type": "string",
            "description": "Dígito de verificación del número de documento leído de MRZ."
          },
          "expirationDateCheckDigit": {
            "type": "string",
            "description": "Dígito de verificación de fecha de caducidad leído de MRZ."
          },
          "dateofBirthMrz": {
            "type": "string",
            "description": "Dígito de verificación de fecha de nacimiento leído de MRZ."
          }
        }
      },
      "identifications": {
        "title": "identifications",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "identifier": {
              "type": "object",
              "properties": {
                "identifierValue": {
                  "type": "string",
                  "description": "Especifica el valor único del identificador."
                },
                "issuingAuthority": {
                  "type": "string",
                  "description": "Nombre de la entidad que emite o proporciona el identificador."
                },
                "issuingAuthorityType": {
                  "type": "string",
                  "description": "Tipo o categoría de la entidad emisora."
                },
                "identifierStartDate": {
                  "type": "string",
                  "description": "Fecha en la que el identificador fue emitido o comenzó a ser válido."
                },
                "identifierEndDate": {
                  "type": "string",
                  "description": "Fecha de expiración o finalización de la validez del identificador."
                },
                "identifierHolderName": {
                  "type": "string",
                  "description": "Nombre de la persona o entidad que posee o está asociada con el identificador."
                }
              }
            },
            "personIdentificationType": {
              "type": "string",
              "enum": [
                "ClaveUnicaRegistroPoblacion",
                "Codigo Cliente",
                "Registro Federal Contribuyentes",
                "Numero Persona Coppel",
                "Documentos Migratorios De No Emigrantes",
                "Codigo Identificacion",
                "Numero Identificacion",
                "Numero Identificacion Social"
              ],
              "description": "Indica el tipo de documento de identidad * ClaveUnicaRegistroPoblacion =  Clave Unica Registro Poblacion * Codigo Cliente = Codigo Cliente  * Registro Federal Contribuyentes = Registro Federal Contribuyentes * Numero Persona Coppel = Numero Persona Coppel * Documentos Migratorios De No Emigrantes = Documentos Migratorios De No Emigrantes  * Codigo Identificacion = Codigo Identificacion * Numero Identificacion = Numero Identificacion * Numero Identificacion Social = Numero Identificacion Social"
            },
            "file": {
              "type": "string",
              "description": "Archivo relacionado con la identificación."
            },
            "folioDigit": {
              "type": "string",
              "description": "Dígito del folio asociado."
            },
            "provinceDigit": {
              "type": "string",
              "description": "Dígito representativo de la provincia."
            },
            "specialIdentDigit": {
              "type": "string",
              "description": "Dígito especial de identificación."
            },
            "personDocumentType": {
              "type": "string",
              "description": "Tipo de documento de la persona."
            },
            "customerCreditRatingState": {
              "$ref": "#/components/schemas/customerCreditRatingState",
              "description": "Informacion sobre el estado de crédito del cliente"
            }
          }
        }
      },
      "incomeProfile": {
        "title": "incomeProfile",
        "type": "object",
        "properties": {
          "jobTitle": {
            "$ref": "#/components/schemas/jobTitle"
          },
          "organisation": {
            "$ref": "#/components/schemas/organisation"
          },
          "lengthOfService": {
            "type": "number",
            "description": "antiguedad en el trabajo"
          },
          "workUnit": {
            "type": "string",
            "description": "departamento o area"
          },
          "salaryAmount": {
            "type": "string",
            "description": "Monto de salario percibido"
          },
          "salaryFrequency": {
            "type": "number",
            "description": "Frecuencia de salario"
          },
          "governmentIdentification": {
            "type": "number",
            "description": "Identificacion del sistema de cotizacion"
          },
          "supervisor": {
            "type": "string",
            "description": "Nombre del jefe inmediato"
          },
          "workforceSize": {
            "type": "string",
            "description": "Cantidad de empleados"
          },
          "otherIncome": {
            "$ref": "#/components/schemas/otherIncome"
          },
          "sequence": {
            "type": "integer",
            "description": "Identificador del registro"
          },
          "incomeType": {
            "type": "number",
            "description": "1.  AHORROS 2.  NOMINA 3.  HERENCIA 4.  NEGOCIO PROPIO 5.  PENSION 6.  VENTA DE NEGOCIOS O PROPIEDADES 7.  OBSEQUIOIS/DONACIONES 8.  APUESTAS, JUES O SORTEOS 9.  OTRO 10.  CREDITOS 11.  RECURSOS DE TERCEROS 12.  SERVICIOS/COMERCIOS 13.  PRODUCCION/MANOFACTURA 14.  REMESAS FAMILIAR 15.  BECA 16.  TANDA 17.  RENTA 18.  HONORARIOS 19.  PRESTAMO",
            "enum": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
          }
        }
      },
      "jobTitle": {
        "title": "jobTitle",
        "type": "object",
        "description": "Informacion sobre el trabajo",
        "properties": {
          "code": {
            "type": "string",
            "description": "Codigo del estado"
          },
          "name": {
            "type": "string",
            "description": "Nombre del estado"
          }
        }
      },
      "lifeInsurance": {
        "title": "lifeInsurance",
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "description": "Fecha de inicio"
          },
          "endDate": {
            "type": "string",
            "description": "Fecha de vencimniento"
          },
          "productInstanceRecord": {
            "$ref": "#/components/schemas/productInstanceRecord"
          },
          "requestedAmount": {
            "type": "string",
            "description": "Monto requerido"
          },
          "companyReference": {
            "type": "string",
            "description": "Referencia de la compañia"
          },
          "productStatus": {
            "type": "string",
            "description": "Indica el estatus del producto"
          }
        }
      },
      "location": {
        "title": "location",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "ipAddress": {
              "type": "string",
              "description": "Dirección IP del dispositivo desde el que se está ejecutando el onboarding."
            },
            "locationDescription": {
              "type": "string",
              "description": "Detalles de la locación"
            },
            "country": {
              "$ref": "#/components/schemas/countryReference"
            },
            "city": {
              "$ref": "#/components/schemas/cityReference"
            },
            "region": {
              "$ref": "#/components/schemas/region"
            },
            "state": {
              "$ref": "#/components/schemas/state"
            },
            "longitude": {
              "type": "string",
              "description": "Longitud de geolocalización del usuario."
            },
            "latitude": {
              "type": "string",
              "description": "Latitud de geolocalización del usuario."
            },
            "street": {
              "type": "object",
              "properties": {
                "streetName": {
                  "type": "string",
                  "description": "Nombre de la calle que normalmente acompaña una direcció n."
                },
                "streetCode": {
                  "type": "string",
                  "description": "Codigo de la calle que normalmente acompaña una direcció n."
                },
                "streetNumber": {
                  "type": "string",
                  "description": "Numero de la calle que normalmente acompaña una direcció n."
                }
              }
            },
            "neighborhood": {
              "type": "string",
              "description": "Barrio, nombre común (mSubLocality)."
            },
            "postalAddress": {
              "type": "string",
              "description": "Dirección postal."
            },
            "isInvalidAddress": {
              "type": "string",
              "description": "Indica si la dirección es válida."
            },
            "emissionDate": {
              "type": "string",
              "description": "Emisión, fecha de registro."
            },
            "locationAddressType": {
              "type": "string",
              "enum": [
                "IP_ADDRESS",
                "DEVICE_ADDRESS",
                "PARTY_ADDRESS",
                "INE_ADDRESS",
                "BIRTH_PLACE",
                "RESIDENCE_INVOICE",
                "PERSON_REFERENCE"
              ],
              "description": "Indica el tipo de direccion * IP_ADDRESS =  Direccion IP  * DEVICE_ADDRESS = Direccion de un dispositivo * PARTY_ADDRESS = Direccion de una persona * INE_ADDRESS = Direccion retornada por el INE * BIRTH_PLACE = Direccion de Nacimiento"
            },
            "countyDistrict": {
              "$ref": "#/components/schemas/countyDistrict"
            },
            "sector": {
              "type": "string",
              "description": "Nombre del sector donde se vive."
            },
            "houseNumber": {
              "type": "string",
              "description": "Numero de casa"
            },
            "couse": {
              "type": "string",
              "description": "Complemento de ubicación (indicación)"
            },
            "stage": {
              "type": "string",
              "description": "Etapa"
            },
            "lot": {
              "type": "string",
              "description": "Lote"
            },
            "building": {
              "type": "string",
              "description": "Edificio"
            },
            "locationReferencePoint": {
              "type": "string",
              "description": "Complemento de domicilio."
            },
            "neighborhoodList": {
              "$ref": "#/components/schemas/neighborhoodList"
            },
            "isFullAddress": {
              "type": "boolean",
              "description": "Dirección domiciliaria completa."
            },
            "internalHouseNumber": {
              "type": "string",
              "description": "Indica el número interior del domicilio"
            },
            "externalHouseNumber": {
              "type": "string",
              "description": "Indica el número exterior del domicilio"
            },
            "housingType": {
              "type": "string"
            },
            "province": {
              "$ref": "#/components/schemas/province"
            },
            "postalCode": {
              "type": "string",
              "description": "Indica el codigo postal"
            },
            "addressWorkingInhabitantsNumber": {
              "type": "string",
              "description": "Numero de trabajadores en el sitio de trabajo"
            },
            "cardinalPoint": {
              "type": "string",
              "description": "Punto Cardinal",
              "enum": ["NORTE", "SUR", "ESTE", "OESTE"]
            },
            "locationObservations": {
              "type": "string",
              "description": "Observaciones referentes al domicilio"
            },
            "block": {
              "type": "string",
              "description": "Bloque o manzana de la locacion"
            },
            "neighborhoodNumber": {
              "type": "string",
              "description": "Codigo Barrio, número común (mSubLocality)."
            },
            "cityNumber": {
              "type": "number",
              "description": "Numero de ciudad"
            },
            "locationInegiCode": {
              "type": "string",
              "description": "Referencia de la localidad con respecto al Inegi"
            },
            "entryPoint": {
              "type": "string",
              "description": "Indica el punto de entrada"
            },
            "isHousingUnit": {
              "type": "boolean",
              "description": "Es una unidad habitacional"
            }
          }
        }
      },
      "machineReadZone": {
        "title": "machineReadZone",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "value": {
              "type": "string",
              "description": "valor de la línea ZLM."
            }
          },
          "description": "Objeto que define las líneas ZLM."
        }
      },
      "neighborhoodList": {
        "title": "neighborhoodList",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Nombre del Barrio."
            }
          }
        }
      },
      "ocrData": {
        "title": "ocrData",
        "type": "object",
        "description": "Datos sacados del OCR aplicado a los documentos",
        "properties": {
          "personName": {
            "$ref": "#/components/schemas/personName"
          },
          "location": {
            "$ref": "#/components/schemas/location"
          },
          "identificationDevice": {
            "$ref": "#/components/schemas/identificationDevice"
          },
          "confidence": {
            "$ref": "#/components/schemas/confidence"
          },
          "dateTime": {
            "type": "string"
          }
        }
      },
      "organisation": {
        "title": "organisation",
        "type": "object",
        "properties": {
          "organisationName": {
            "type": "string",
            "description": "Nombre oficial de la organización."
          }
        }
      },
      "otherIncome": {
        "title": "otherIncome",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "incomeAmount": {
              "type": "number",
              "description": "Monto del ingreso"
            },
            "incomeLocation": {
              "type": "string",
              "description": "Local, extranjero, ambos"
            },
            "incomeSource": {
              "type": "string",
              "description": "Fuente de ingresos"
            },
            "incomeType": {
              "type": "number",
              "description": "1.  AHORROS 2.  NOMINA 3.  HERENCIA 4.  NEGOCIO PROPIO 5.  PENSION 6.  VENTA DE NEGOCIOS O PROPIEDADES 7.  OBSEQUIOIS/DONACIONES 8.  APUESTAS, JUES O SORTEOS 9.  OTRO 10.  CREDITOS 11.  RECURSOS DE TERCEROS 12.  SERVICIOS/COMERCIOS 13.  PRODUCCION/MANOFACTURA 14.  REMESAS FAMILIAR 15.  BECA 16.  TANDA 17.  RENTA 18.  HONORARIOS 19.  PRESTAMO",
              "enum": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
            }
          }
        }
      },
      "page": {
        "title": "page",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "content": {
              "$ref": "#/components/schemas/content"
            },
            "type": {
              "type": "string",
              "enum": [
                "selfie",
                "videoSelfie",
                "domiciliary-invoice",
                "front-document",
                "back-document"
              ],
              "description": "Indica el tipo de la imágen. * selfie =  Selfie * videoSelfie = Video Selfie * domiciliary-invoice = Comprobante de dpmicilio * front-document = Anverso del documento de identidad * back-document = Reverso del documento de identidad"
            }
          }
        }
      },
      "partyReference": {
        "title": "partyReference",
        "type": "object",
        "properties": {
          "identifications": {
            "$ref": "#/components/schemas/identifications"
          },
          "personName": {
            "$ref": "#/components/schemas/personName"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Fecha de nacimiento"
          },
          "location": {
            "$ref": "#/components/schemas/location"
          },
          "gender": {
            "type": "string",
            "description": "El género de la persona  * M = Masculino * F = Femenino"
          },
          "status": {
            "type": "string",
            "description": "Estado de validacion de un proceso."
          },
          "nationality": {
            "type": "string",
            "description": "Nacionalidad del usuario."
          },
          "nationalityMrz": {
            "type": "string",
            "description": "Nacionalidad del usuario."
          },
          "contactPoint": {
            "$ref": "#/components/schemas/contactPoint"
          },
          "identificationDevice": {
            "$ref": "#/components/schemas/identificationDevice"
          },
          "customerType": {
            "type": "string",
            "description": "Tipo de cliente."
          },
          "referenceId": {
            "type": "string",
            "description": "Id del cliente"
          },
          "referenceIdCoppel": {
            "type": "string",
            "description": "Id Coppel del cliente"
          },
          "marketing": {
            "type": "string",
            "description": "Marketing"
          },
          "profession": {
            "type": "string",
            "description": "Actividad profesional del cliente"
          },
          "matrimonialRegime": {
            "type": "string",
            "description": "Régimen matrimonial."
          },
          "maritalStatus": {
            "type": "string",
            "description": "Estado civil."
          },
          "birthPlace": {
            "$ref": "#/components/schemas/birthPlace"
          },
          "personProfile": {
            "$ref": "#/components/schemas/personProfile"
          },
          "companyReference": {
            "type": "string",
            "description": "Referencia de empresa"
          },
          "employeeNumber": {
            "type": "string",
            "description": "id de empleado que realizo la transaccion"
          },
          "bankBranch": {
            "$ref": "#/components/schemas/bankBranch"
          },
          "totalOccupancy": {
            "type": "string",
            "description": "ocupación total"
          },
          "specificActivity": {
            "type": "string",
            "description": "actividad especifica"
          },
          "economicActivity": {
            "type": "string",
            "description": "actividad economica"
          },
          "activitySector": {
            "$ref": "#/components/schemas/activitySector"
          },
          "dependents": {
            "type": "string",
            "description": "dependientes"
          },
          "customerReference": {
            "type": "string",
            "description": "Referencia del cliente"
          },
          "businessName": {
            "type": "string",
            "description": "Nombre comercial"
          },
          "registerFlag": {
            "type": "string",
            "description": "Indica badera registrada"
          },
          "statusAccept": {
            "type": "string",
            "description": "Indica el estado aceptado"
          },
          "version": {
            "type": "string",
            "description": "Indica la version enviada"
          },
          "economicActivityIdentification": {
            "type": "string",
            "description": "Actividad económica "
          },
          "economicSubActivityIdentification": {
            "type": "string",
            "description": "Sub Actividad económica"
          },
          "resourceSupplier": {
            "type": "string",
            "description": "Respuesta a la pregunta ¿Eres el proveedor de los recursos?"
          },
          "housingType": {
            "type": "string",
            "description": "Identificador del catálogo de tipo de vivienda. - 1. Propia - 2. Rentada - 3. Familiar - 4. Huesped - 5. Pagandola/Hipotecada/Infonavit - 6. Prestada"
          },
          "age": {
            "type": "string",
            "description": "La edad de la persona."
          }
        }
      },
      "partyReferenceDataDirectoryEntryCollection": {
        "title": "partyReferenceDataDirectoryEntryCollection",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "partyReference": {
              "$ref": "#/components/schemas/partyReference"
            }
          }
        }
      },
      "partyRelationshipProcedure": {
        "title": "partyRelationshipProcedure",
        "type": "object",
        "properties": {
          "sessionDialogueIdentification": {
            "type": "string",
            "maxLength": 24,
            "description": "Identifica la sesión de incorporación que se inicializa. Se puede usar para obtener datos sobre esa sesión en llamadas futuras."
          },
          "partyReference": {
            "$ref": "#/components/schemas/partyReference"
          },
          "partyRelationshipType": {
            "type": "string",
            "description": "Tipo de relación de fiesta"
          },
          "partyLifeCycleMaintenanceSchedule": {
            "type": "string",
            "description": "Ciclo de vida de la programación del mantenimiento"
          },
          "partyLifeCycleMaintenanceTask": {
            "type": "string",
            "description": "Tarea de mantenimiento del ciclo de vida del grupo"
          },
          "partyLifeCycleMaintenanceTaskType": {
            "type": "string",
            "description": "Parte Tipo de tarea de mantenimiento del ciclo de vida"
          },
          "partyLifeCycleMaintenanceWorkProducts": {
            "type": "string",
            "description": "Productos de trabajo de mantenimiento del ciclo de vida del partido"
          },
          "partyLifeAccountResult": {
            "type": "string",
            "description": "Resultado de la cuenta party life"
          },
          "partyLifeApplicationStatus": {
            "type": "string",
            "description": "Estado de la aplicación partyLife"
          },
          "customerProspectiveType": {
            "type": "string",
            "description": "Tipo de Prospeto"
          }
        }
      },
      "partyRetailReferenceDataDirectoryEntry": {
        "title": "partyRetailReferenceDataDirectoryEntry",
        "type": "object",
        "properties": {
          "partyReference": {
            "$ref": "#/components/schemas/partyReference"
          }
        }
      },
      "partyType": {
        "title": "partyType",
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Descripción del tipo de persona."
          }
        }
      },
      "paymentBalancesFacility": {
        "title": "paymentBalancesFacility",
        "type": "object",
        "properties": {
          "descriptionAmountChargeService": {
            "type": "string",
            "description": "Descripción del cambio de la cantidad del servicio"
          },
          "operationDate": {
            "type": "string",
            "description": "Fecha de la operación"
          },
          "transactionReferenceBalance": {
            "type": "string",
            "description": "Referencía del balance de la transacción"
          },
          "branchTransactionNumber": {
            "type": "string",
            "description": "Número de la rama de la transacción"
          },
          "serviceAmount": {
            "type": "string",
            "description": "Monto asociado al servicio."
          },
          "currency": {
            "type": "string",
            "description": "Moneda en la que se realiza el servicio."
          },
          "serviceAmountCharge": {
            "type": "string",
            "description": "Monto asociado al cargo por servicio."
          },
          "descriptionAmountService": {
            "type": "string",
            "description": "Concepto asociado al monto del servicio."
          },
          "description": {
            "type": "string",
            "description": "Descripción adicional sobre el servicio."
          },
          "companyReference": {
            "type": "string",
            "description": "Referencia a la empresa."
          },
          "branch": {
            "type": "string",
            "description": "Indica la sucursal o localización específica donde se realiza la operación."
          },
          "user": {
            "type": "string",
            "description": "Nombre de usuario o ID del individuo que realiza la transacción.",
            "example": "jduran"
          },
          "financialTransaction": {
            "type": "string",
            "description": "Identificador de la transacción financiera vinculada a la orden."
          }
        }
      },
      "paymentCard": {
        "title": "paymentCard",
        "type": "object",
        "properties": {
          "cardNumber": {
            "type": "string",
            "description": "Indica el numero del plastico o de la tarjeta"
          },
          "cardExpiryDate": {
            "type": "string",
            "description": "Fecha de expireción de la tarjeta"
          },
          "cardHolderName": {
            "type": "string",
            "description": "Indica el nombre del plastico o de la tarjeta"
          },
          "cardType": {
            "type": "string",
            "description": "Indica el tipo de la tarjeta"
          },
          "deviceStatus": {
            "type": "string",
            "description": "Estado del dispositivo"
          },
          "cardHolderType": {
            "type": "string",
            "description": "Indica el tipo de titular de la tarjeta"
          }
        }
      },
      "pepProfile": {
        "title": "pepProfile",
        "type": "object",
        "properties": {
          "relatives": {
            "type": "string",
            "description": "Indica si tiene familiares."
          },
          "role": {
            "type": "string",
            "description": "Rol del PEP."
          },
          "publicPosition": {
            "type": "boolean",
            "description": "¿Cuenta con un cargo público? PEP"
          },
          "pepFamily": {
            "type": "boolean",
            "description": "¿Se encuentra algún familiar dentro de algún cargo público?"
          },
          "civilAssociation": {
            "type": "boolean",
            "description": "¿Se encuentra dentro de una asociación civil?"
          },
          "associationDescription": {
            "type": "string",
            "description": "Asociación civil acotado a 50 caracteres"
          },
          "ownershipStake": {
            "type": "number",
            "description": "Porcentaje de participacion"
          }
        }
      },
      "personName": {
        "title": "personName",
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "Primer nombre del usuario"
          },
          "secondName": {
            "type": "string",
            "description": "Segundo nombre del usuario"
          },
          "familyName": {
            "type": "string",
            "description": "Primer apellido del usuario"
          },
          "secondLastName": {
            "type": "string",
            "description": "Segundo apellido del usuario"
          },
          "fullNameMrz": {
            "type": "string",
            "description": "Nombre completo segun documento de identidad"
          },
          "marriedName": {
            "type": "string",
            "description": "Apellido de Matrimonio"
          },
          "fullName": {
            "type": "string",
            "description": "Nombre completo"
          },
          "alias": {
            "type": "string",
            "description": "Apodo"
          }
        }
      },
      "personProfile": {
        "title": "personProfile",
        "type": "object",
        "properties": {
          "profileType": {
            "type": "string",
            "description": "Tipo de perfil."
          },
          "residency": {
            "type": "string",
            "description": "Lugar de residencia."
          },
          "biometricType": {
            "type": "string"
          },
          "pepProfile": {
            "$ref": "#/components/schemas/pepProfile"
          },
          "partyType": {
            "$ref": "#/components/schemas/partyType"
          },
          "activitySector": {
            "$ref": "#/components/schemas/activitySector"
          },
          "economicActivity": {
            "$ref": "#/components/schemas/economicActivity"
          },
          "segment": {
            "$ref": "#/components/schemas/segment"
          },
          "group": {
            "$ref": "#/components/schemas/group"
          },
          "subGroup": {
            "$ref": "#/components/schemas/subGroup"
          },
          "numberOfDependents": {
            "type": "string",
            "description": "Número de dependientes."
          },
          "guardian": {
            "type": "string",
            "description": "Tutor o guardián."
          },
          "spouse": {
            "type": "string",
            "description": "Cónyuge."
          },
          "burialInsurance": {
            "type": "string",
            "description": "Seguro de entierro."
          },
          "educationalLevel": {
            "type": "string",
            "description": "Nivel educativo."
          },
          "residencyPlace": {
            "type": "string",
            "description": "Lugar de residencia."
          },
          "residencyYear": {
            "type": "string",
            "description": "Año de residencia."
          },
          "propertyName": {
            "type": "string",
            "description": "Nombre de la propiedad."
          },
          "mortgage": {
            "type": "number",
            "description": "Monto de la hipoteca."
          }
        }
      },
      "productInstanceRecord": {
        "title": "productInstanceRecord",
        "type": "object",
        "properties": {
          "productInstanceReference": {
            "type": "string",
            "description": "Indica el identificador del producto"
          },
          "productInstanceReferenceName": {
            "type": "string",
            "description": "Indica el nombre del producto"
          }
        }
      },
      "province": {
        "title": "province",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nombre de la provincia"
          },
          "code": {
            "type": "string",
            "description": "Código de la provincia"
          }
        }
      },
      "publicDirectoryReference": {
        "title": "publicDirectoryReference",
        "type": "object",
        "properties": {
          "identifierValue": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "sanction",
                "warning",
                "fitness-probity",
                "pep",
                "pep-class-1",
                "pep-class-2",
                "pep-class-3",
                "pep-class-4",
                "adverse-media",
                "adverse-media-financial-crime",
                "adverse-media-violent-crime",
                "adverse-media-sexual-crime",
                "adverse-media-terrorism",
                "adverse-media-fraud",
                "adverse-media-narcotics",
                "adverse-media-general",
                "adverse-media-v2-property",
                "adverse-media-v2-financial-aml-cft",
                "adverse-media-v2-fraud-linked",
                "adverse-media-v2-narcotics-aml-cft",
                "adverse-media-v2-violence-aml-cft",
                "adverse-media-v2-terrorism",
                "adverse-media-v2-cybercrime",
                "adverse-media-v2-general-aml-cft",
                "adverse-media-v2-regulatory",
                "adverse-media-v2-financial-difficulty",
                "adverse-media-v2-other-financial",
                "adverse-media-v2-other-serious",
                "adverse-media-v2-other-minor"
              ]
            },
            "description": "Valores de enumeración para este campo/ - sanction, warning, fitness-probity, pep, pep-class-1, pep-class-2, pep-class-3, pep-class-4, adverse-media, adverse-media-financial-crime, adverse-media-violent-crime, adverse-media-sexual-crime, adverse-media-terrorism, adverse-media-fraud, adverse-media-narcotics, adverse-media-general, adverse-media-v2-property, adverse-media-v2-financial-aml-cft, adverse-media-v2-fraud-linked, adverse-media-v2-narcotics-aml-cft, adverse-media-v2-violence-aml-cft, adverse-media-v2-terrorism, adverse-media-v2-cybercrime, adverse-media-v2-general-aml-cft, adverse-media-v2-regulatory, adverse-media-v2-financial-difficulty, adverse-media-v2-other-financial, adverse-media-v2-other-serious, adverse-media-v2-other-minor"
          }
        },
        "description": "Lista de seguimiento"
      },
      "qualification": {
        "title": "qualification",
        "type": "object",
        "description": "Objeto que gestiona la calificacion de un prospecto basado en las listas de seguimiento y listas negras",
        "properties": {
          "partyReference": {
            "$ref": "#/components/schemas/partyReference"
          },
          "publicDirectoryReference": {
            "$ref": "#/components/schemas/publicDirectoryReference"
          },
          "qualificationTaskResult": {
            "$ref": "#/components/schemas/qualificationTaskResult"
          }
        }
      },
      "qualificationTaskResult": {
        "title": "qualificationTaskResult",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "result": {
              "type": "boolean",
              "description": "Estado de la validacion"
            },
            "qualificationType": {
              "type": "string",
              "enum": ["INE", "CURP", "black-list", "watch-list", "custom-watch-list", "bancoppel"],
              "description": "Indica el tipo de lista de seguimiento * INE =  Instituto Nacional electoral * CURP = Clave Unica de Registro Poblacional * black-list = Lista negra * watch-list = Lista de deteccion de terroristas  * custom-watch-list = Lista de deteccion de terroristas personalizada  * bancoppel = Lista de clientes Bancoppel * coppel = Lista de cliente coppel"
            }
          }
        },
        "description": "Listado de seguimiento."
      },
      "region": {
        "title": "region",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nombre de la region"
          }
        }
      },
	  "renapo": {
        "title": "renapo",
        "type": "object",
        "properties": {
          "partyReference": {
            "$ref": "#/components/schemas/partyReference"
          }
        }
      },
      "rfc": {
        "title": "rfc",
        "type": "object",
        "description": "Objeto que indica la informacion sacada del RFC",
        "properties": {
          "partyReference": {
            "$ref": "#/components/schemas/partyReference"
          }
        }
      },
      "segment": {
        "title": "segment",
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Descripción del segmento."
          },
          "code": {
            "type": "string",
            "description": "Código del segmento."
          }
        }
      },
      "selfieDialogueRecord": {
        "title": "selfieDialogueRecord",
        "type": "object",
        "properties": {
          "confidence": {
            "type": "number",
            "description": "Puede tomar el valor de 0 o 1. Un valor de 0 indica que la persona en la foto esta viva."
          },
          "hasLenses": {
            "type": "boolean",
            "description": "Detecta si la persona en la foto tiene lentes, de ser asi se recomienda tomar otra foto."
          },
          "hasFaceMask": {
            "type": "boolean",
            "description": "Detecta si la persona en la foto tiene mascarilla, de ser asi se recomienda tomar otra foto."
          },
          "isBright": {
            "type": "boolean",
            "description": "Detecta si la foto es lo suficientemente brillante, de no ser asi se recomienda tomar otra foto."
          },
          "age": {
            "type": "number",
            "description": "La edad de la persona en la foto."
          },
          "documentStatus": {
            "type": "string",
            "description": "Estatus del documento"
          },
          "existingUser": {
            "type": "boolean",
            "description": "Bandera que indica si un usuario ya está registrado."
          },
          "existingInterviewId": {
            "type": "string",
            "description": "ID de sesión, en caso de que el usuario sea aprobado en otra sesión."
          },
          "nameMatched": {
            "type": "string",
            "description": "Muestra si el nombre coincide con el utilizado anteriormente (solo en caso de que el usuario ya esté aprobado en otra sesión)"
          },
          "existingExternalId": {
            "type": "string",
            "description": "ID externo, en caso de que el usuario sea aprobado en otra sesión."
          },
          "url": {
            "type": "string",
            "description": "Url Selfie"
          }
        }
      },
      "state": {
        "title": "state",
        "type": "object",
        "description": "Informacion sobre el estado",
        "properties": {
          "code": {
            "type": "string",
            "description": "Codigo del estado"
          },
          "name": {
            "type": "string",
            "description": "Nombre del estado"
          },
          "inegiCode": {
            "type": "string",
            "description": "Nombre del municipio con respecto al Inegi"
          }
        }
      },
      "subGroup": {
        "title": "subGroup",
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Descripción del subgrupo."
          },
          "code": {
            "type": "string",
            "description": "Código del subgrupo."
          }
        }
      },
      "validationManagement": {
        "title": "validationManagement",
        "type": "array",
        "description": "Validación OTP",
        "items": {
          "type": "object",
          "properties": {
            "validationCheckDigit": {
              "type": "string",
              "description": "Código ingresado en validación acotado a 6 caracteres"
            },
            "validationStatus": {
              "type": "boolean",
              "description": "Estado de validacion"
            },
            "validationDescription": {
              "type": "string",
              "description": "Respuesta de servicio o Respuesta de validación acotado a 200 caracteres"
            },
            "validationDateTime": {
              "type": "string",
              "description": "Fecha de validacion"
            },
            "validationType": {
              "type": "number",
              "description": "tipo de validacion realizada por el cliente prospecto o por el sistema. * 1 - Validación INE - Listas Nominales * 2 - Validación OTP correo * 3 - Validación Correo Malware * 4 - Validación OTP celular * 5 - Validación CURP * 6 - Validación RFC * 7 - Validación SIC- buró externo * 8 - Validación de Domicilio * 9 - Validación de Domicilio referencia * 10 - Pregunta validación PEP * 11 - Validación Dirección INE * 12 - Validación Código Postal",
              "enum": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
            }
          }
        }
      }
    }
  }
}
